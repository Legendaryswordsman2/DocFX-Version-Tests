{
  "api/BlazerTech.CharacterManagement.CharacterCreator.CCMBase.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CCMBase.html",
    "title": "Class CCMBase | BlazerTech Character Management System",
    "summary": "Class CCMBase Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll Base class for all classes a part of the Character Creator Menu public abstract class CCMBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCMBase Derived CCMCharacterPieceSelectionManager CCMCharacterPreviewHandler CCMLoadingScreen Fields characterCreationMenuManager protected CharacterCreationMenuManager characterCreationMenuManager Field Value CharacterCreationMenuManager coreReferencesSuccessfullySet protected bool coreReferencesSuccessfullySet Field Value bool referenceHandler protected CCReferenceHandler referenceHandler Field Value CCReferenceHandler Methods Awake() protected virtual void Awake() CharacterCreationMenuDisabled() protected virtual void CharacterCreationMenuDisabled() CharacterCreationMenuEnabled() protected virtual void CharacterCreationMenuEnabled() GetCCReferenceHandler() protected CCReferenceHandler GetCCReferenceHandler() Returns CCReferenceHandler GetCharacterCreationManagerReference() protected CharacterCreationMenuManager GetCharacterCreationManagerReference() Returns CharacterCreationMenuManager"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CCMCharacterPieceSelectionManager.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CCMCharacterPieceSelectionManager.html",
    "title": "Class CCMCharacterPieceSelectionManager | BlazerTech Character Management System",
    "summary": "Class CCMCharacterPieceSelectionManager Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll [DisallowMultipleComponent] public class CCMCharacterPieceSelectionManager : CCMBase Inheritance object Object Component Behaviour MonoBehaviour CCMBase CCMCharacterPieceSelectionManager Inherited Members CCMBase.referenceHandler CCMBase.characterCreationMenuManager CCMBase.coreReferencesSuccessfullySet CCMBase.CharacterCreationMenuDisabled() CCMBase.GetCharacterCreationManagerReference() CCMBase.GetCCReferenceHandler() Methods Awake() protected override void Awake() CharacterCreationMenuEnabled() protected override void CharacterCreationMenuEnabled()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CCMCharacterPreviewHandler.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CCMCharacterPreviewHandler.html",
    "title": "Class CCMCharacterPreviewHandler | BlazerTech Character Management System",
    "summary": "Class CCMCharacterPreviewHandler Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class CCMCharacterPreviewHandler : CCMBase Inheritance object Object Component Behaviour MonoBehaviour CCMBase CCMCharacterPreviewHandler Inherited Members CCMBase.referenceHandler CCMBase.characterCreationMenuManager CCMBase.coreReferencesSuccessfullySet CCMBase.GetCharacterCreationManagerReference() CCMBase.GetCCReferenceHandler() Properties CharacterAnimator public Animator CharacterAnimator { get; } Property Value Animator CharacterSprite public Image CharacterSprite { get; } Property Value Image DefaultDirection public Direction DefaultDirection { get; } Property Value Direction Methods Awake() protected override void Awake() CharacterCreationMenuDisabled() protected override void CharacterCreationMenuDisabled() CharacterCreationMenuEnabled() protected override void CharacterCreationMenuEnabled() LoadUnloadedCharacterPiecesAsync() public Task LoadUnloadedCharacterPiecesAsync() Returns Task RotateCharacterPreview(TwoDirectional) public void RotateCharacterPreview(TwoDirectional direction) Parameters direction TwoDirectional RotateCharacterPreview(bool) public void RotateCharacterPreview(bool rotateLeft) Parameters rotateLeft bool SetCharacterAnimator(RuntimeAnimatorController) public void SetCharacterAnimator(RuntimeAnimatorController controller) Parameters controller RuntimeAnimatorController SetCharacterPreviewDirection(Direction) public void SetCharacterPreviewDirection(Direction direction) Parameters direction Direction UpdateCharacterMaterial() public void UpdateCharacterMaterial()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CCMLoadingBufferSpriteFillProgress.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CCMLoadingBufferSpriteFillProgress.html",
    "title": "Class CCMLoadingBufferSpriteFillProgress | BlazerTech Character Management System",
    "summary": "Class CCMLoadingBufferSpriteFillProgress Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class CCMLoadingBufferSpriteFillProgress : LoadingScreenProgress Inheritance object Object Component Behaviour MonoBehaviour LoadingScreenProgress CCMLoadingBufferSpriteFillProgress Methods OnLoadingProgressUpdated(object, float) protected override void OnLoadingProgressUpdated(object sender, float progress) Parameters sender object progress float OnLoadingStarting() protected override void OnLoadingStarting()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CCMLoadingScreen.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CCMLoadingScreen.html",
    "title": "Class CCMLoadingScreen | BlazerTech Character Management System",
    "summary": "Class CCMLoadingScreen Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class CCMLoadingScreen : CCMBase, ILoadingScreen Inheritance object Object Component Behaviour MonoBehaviour CCMBase CCMLoadingScreen Implements ILoadingScreen Inherited Members CCMBase.referenceHandler CCMBase.characterCreationMenuManager CCMBase.coreReferencesSuccessfullySet CCMBase.Awake() CCMBase.CharacterCreationMenuEnabled() CCMBase.CharacterCreationMenuDisabled() CCMBase.GetCharacterCreationManagerReference() CCMBase.GetCCReferenceHandler() Events OnLoadingFinished public event EventHandler OnLoadingFinished Event Type EventHandler OnLoadingProgressUpdated public event EventHandler<float> OnLoadingProgressUpdated Event Type EventHandler<float>"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CCMRelay.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CCMRelay.html",
    "title": "Class CCMRelay | BlazerTech Character Management System",
    "summary": "Class CCMRelay Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll [DisallowMultipleComponent] public class CCMRelay : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCMRelay Methods CloseMenu() public void CloseMenu() OpenCharacterCreationMenuWithSingleCharacter(LayeredCharacterTypeSO) public void OpenCharacterCreationMenuWithSingleCharacter(LayeredCharacterTypeSO characterType) Parameters characterType LayeredCharacterTypeSO SaveCharacter() public void SaveCharacter()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterCreationMenuEnablerRelay.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterCreationMenuEnablerRelay.html",
    "title": "Class CharacterCreationMenuEnablerRelay | BlazerTech Character Management System",
    "summary": "Class CharacterCreationMenuEnablerRelay Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class CharacterCreationMenuEnablerRelay : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CharacterCreationMenuEnablerRelay Properties CharacterGroupName public string CharacterGroupName { get; } Property Value string CharacterName public string CharacterName { get; } Property Value string Methods EnableCharacterCreationMenu() public void EnableCharacterCreationMenu()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterCreationMenuManager.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterCreationMenuManager.html",
    "title": "Class CharacterCreationMenuManager | BlazerTech Character Management System",
    "summary": "Class CharacterCreationMenuManager Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll [DefaultExecutionOrder(-50)] [DisallowMultipleComponent] public class CharacterCreationMenuManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CharacterCreationMenuManager Fields CharacterSaved Invoked when the ActiveCharacterDraft is saved. [Space] public UnityEvent CharacterSaved Field Value UnityEvent Properties ActiveCharacterDraft public CharacterDraft ActiveCharacterDraft { get; } Property Value CharacterDraft ActiveCharacterType The CharacterType being used when the Character Creation Menu is active. public LayeredCharacterTypeSO ActiveCharacterType { get; } Property Value LayeredCharacterTypeSO AutoEnableOnStart Automatically enables the character creation menu in the start method with the SingleCharacterGroup a part of the Character Type used. public bool AutoEnableOnStart { get; } Property Value bool DefaultCharacterType The LayeredCharacterTypeSO that is assigned if ActiveCharacterType is null. public LayeredCharacterTypeSO DefaultCharacterType { get; } Property Value LayeredCharacterTypeSO EnabledAndSetup True if the Character Creation Menu is currently enabled and finished loading. public bool EnabledAndSetup { get; } Property Value bool Instance Property for accessing the single instance of CharacterCreationMenuManager. public static CharacterCreationMenuManager Instance { get; } Property Value CharacterCreationMenuManager MenuContents The root game object of the Character Creation Menu. Must be separate from the game object this script is attached to public GameObject MenuContents { get; } Property Value GameObject NewCharacterTemplate If assigned, the template will be used when creating a new character instead of creating a blank character. public LayeredCharacterTemplateSO NewCharacterTemplate { get; } Property Value LayeredCharacterTemplateSO Methods DisableMenu() public void DisableMenu() EnableMenu_EditCharacter(LayeredCharacter, bool) Enable the Character Creation Menu to edit a pre existing character. public void EnableMenu_EditCharacter(LayeredCharacter character, bool enableMenuContents = true) Parameters character LayeredCharacter The character to be edited in the Character Creation Menu. enableMenuContents bool Optional bool. When not toggled the Character Creation Menu will not automatically open but will still be active and enabled. Remarks A copy of the character will be created and editable. When saved any changes made to the copy will be applied to the original character. Exceptions ArgumentNullException Thrown when the character is null. EnableMenu_NewCharacterInFlexibleGroup(string, FlexibleCharacterGroup, bool) Enable the Character Creation Menu to create a new character inside a FlexibleCharacterGroup. public void EnableMenu_NewCharacterInFlexibleGroup(string characterName, FlexibleCharacterGroup flexibleGroup, bool enableMenuContents = true) Parameters characterName string The name of the new character. flexibleGroup FlexibleCharacterGroup The FlexibleCharacterGroup the new character will be added to when saved. enableMenuContents bool Optional bool. When not toggled the Character Creation Menu will not automatically open but will still be active and enabled. Remarks A new character will be created and editable. When saved any changes made to the copy will be applied to the original character. Exceptions ArgumentNullException Thrown when the flexibleGroup is null. ArgumentException Thrown when the characterName is blank. EnableMenu_NewSingleGroup(LayeredCharacterTypeSO, bool) Enable the Character Creation Menu for a SingleCharacterGroup in a Character Type. Creates a new character. public void EnableMenu_NewSingleGroup(LayeredCharacterTypeSO characterType = null, bool enableMenuContents = true) Parameters characterType LayeredCharacterTypeSO The Character Type used to find the SingleCharacterGroup. enableMenuContents bool Optional bool. When not toggled the Character Creation Menu will not automatically open but will still be active and enabled. Remarks If a character does not exist in the group, the new character will be put in the group when saved. If a character already exists it will overridden when the new character is saved. Exceptions ArgumentNullException Thrown when characterType is null. ArgumentException Thrown when characterType is invalid. EnableMenu_SingleGroup(LayeredCharacterTypeSO, bool) Enable the Character Creation Menu for a SingleCharacterGroup in a Character Type. If a character exists, use it; otherwise, create a new one. public void EnableMenu_SingleGroup(LayeredCharacterTypeSO characterType = null, bool enableMenuContents = true) Parameters characterType LayeredCharacterTypeSO The Character Type used to find the SingleCharacterGroup. enableMenuContents bool Optional bool. When not toggled the Character Creation Menu will not automatically open but will still be active and enabled. Remarks If a character already exists it will be copied and editable inside the menu. When the character is saved, all changes will be applied to the original character. Exceptions ArgumentNullException Thrown when characterType is null. ArgumentException Thrown when characterType is invalid. SaveCharacter() Saves the active Character Draft and puts it in a group if relevent. public void SaveCharacter() Events OnCharacterSaved public static event EventHandler<LayeredCharacter> OnCharacterSaved Event Type EventHandler<LayeredCharacter> OnMenuDisabled public event EventHandler OnMenuDisabled Event Type EventHandler OnMenuEnabledAndSetup public event EventHandler OnMenuEnabledAndSetup Event Type EventHandler OnMenuLoadingProgressUpdated public event EventHandler<float> OnMenuLoadingProgressUpdated Event Type EventHandler<float>"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterListEntryDisplayType.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterListEntryDisplayType.html",
    "title": "Enum CharacterListEntryDisplayType | BlazerTech Character Management System",
    "summary": "Enum CharacterListEntryDisplayType Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public enum CharacterListEntryDisplayType Fields Sprite = 1 Text = 0"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterPieceDropdownSelector.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterPieceDropdownSelector.html",
    "title": "Class CharacterPieceDropdownSelector | BlazerTech Character Management System",
    "summary": "Class CharacterPieceDropdownSelector Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class CharacterPieceDropdownSelector : CharacterPieceSelector Inheritance object Object Component Behaviour MonoBehaviour CharacterPieceSelector CharacterPieceDropdownSelector Inherited Members CharacterPieceSelector.CharacterPieceCollectionOverride CharacterPieceSelector.characterCreationMenuManager CharacterPieceSelector.characterPieceSelectionManager CharacterPieceSelector.AssignedCharacterPiece CharacterPieceSelector.CharacterCreationMenuOpened(EquippedCharacterPiece, CCMCharacterPieceSelectionManager) CharacterPieceSelector.Hide() CharacterPieceSelector.Unhide() CharacterPieceSelector.ChangeAlpha(float) Properties Dropdown public TMP_Dropdown Dropdown { get; } Property Value TMP_Dropdown Methods CharacterPieceUpdated() Called whenever the Character Piece assigned to this selector is updated protected override void CharacterPieceUpdated() DisableInteractivity() public override void DisableInteractivity() Disabled() Called whenever the Character Creation Menu is disabled protected override void Disabled() EnableInteractivity() public override void EnableInteractivity() OnDestroy() protected override void OnDestroy() Setup() Setup is called every time the Character Creation Menu is opened protected override void Setup()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterPieceSelector.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterPieceSelector.html",
    "title": "Class CharacterPieceSelector | BlazerTech Character Management System",
    "summary": "Class CharacterPieceSelector Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public abstract class CharacterPieceSelector : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CharacterPieceSelector Derived CharacterPieceDropdownSelector Fields characterCreationMenuManager protected CharacterCreationMenuManager characterCreationMenuManager Field Value CharacterCreationMenuManager characterPieceSelectionManager protected CCMCharacterPieceSelectionManager characterPieceSelectionManager Field Value CCMCharacterPieceSelectionManager Properties AssignedCharacterPiece public EquippedCharacterPiece AssignedCharacterPiece { get; } Property Value EquippedCharacterPiece CharacterPieceCollectionOverride public CharacterLayerSO CharacterPieceCollectionOverride { get; } Property Value CharacterLayerSO Methods ChangeAlpha(float) public virtual void ChangeAlpha(float alpha) Parameters alpha float CharacterCreationMenuOpened(EquippedCharacterPiece, CCMCharacterPieceSelectionManager) public bool CharacterCreationMenuOpened(EquippedCharacterPiece newCharacterPiece, CCMCharacterPieceSelectionManager characterPieceSelectionManager) Parameters newCharacterPiece EquippedCharacterPiece characterPieceSelectionManager CCMCharacterPieceSelectionManager Returns bool CharacterPieceUpdated() Called whenever the Character Piece assigned to this selector is updated protected abstract void CharacterPieceUpdated() DisableInteractivity() public abstract void DisableInteractivity() Disabled() Called whenever the Character Creation Menu is disabled protected abstract void Disabled() EnableInteractivity() public abstract void EnableInteractivity() Hide() public virtual void Hide() OnDestroy() protected virtual void OnDestroy() Setup() Setup is called every time the Character Creation Menu is opened protected abstract void Setup() Unhide() public virtual void Unhide()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterPressenceController.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterPressenceController.html",
    "title": "Class CharacterPressenceController | BlazerTech Character Management System",
    "summary": "Class CharacterPressenceController Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class CharacterPressenceController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CharacterPressenceController"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterSelectionLoadingScreen.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.CharacterSelectionLoadingScreen.html",
    "title": "Class CharacterSelectionLoadingScreen | BlazerTech Character Management System",
    "summary": "Class CharacterSelectionLoadingScreen Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class CharacterSelectionLoadingScreen : MonoBehaviour, ILoadingScreen Inheritance object Object Component Behaviour MonoBehaviour CharacterSelectionLoadingScreen Implements ILoadingScreen Events OnLoadingFinished public event EventHandler OnLoadingFinished Event Type EventHandler OnLoadingProgressUpdated public event EventHandler<float> OnLoadingProgressUpdated Event Type EventHandler<float>"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.GameObjectStateNotifier.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.GameObjectStateNotifier.html",
    "title": "Class GameObjectStateNotifier | BlazerTech Character Management System",
    "summary": "Class GameObjectStateNotifier Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class GameObjectStateNotifier : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GameObjectStateNotifier Events OnGameObjectDisabled public event EventHandler OnGameObjectDisabled Event Type EventHandler OnGameObjectEnabled public event EventHandler OnGameObjectEnabled Event Type EventHandler OnGameObjectStateChanged public event EventHandler<bool> OnGameObjectStateChanged Event Type EventHandler<bool>"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.ILoadingScreen.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.ILoadingScreen.html",
    "title": "Interface ILoadingScreen | BlazerTech Character Management System",
    "summary": "Interface ILoadingScreen Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public interface ILoadingScreen Events OnLoadingFinished event EventHandler OnLoadingFinished Event Type EventHandler OnLoadingProgressUpdated event EventHandler<float> OnLoadingProgressUpdated Event Type EventHandler<float>"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.InitializationMode.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.InitializationMode.html",
    "title": "Enum InitializationMode | BlazerTech Character Management System",
    "summary": "Enum InitializationMode Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public enum InitializationMode Fields Create = 0 InitializeExisting = 1"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.LayeredCharacterListEntry.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.LayeredCharacterListEntry.html",
    "title": "Class LayeredCharacterListEntry | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterListEntry Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class LayeredCharacterListEntry : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LayeredCharacterListEntry Methods RemoveCharacter() public void RemoveCharacter() SelectCharacter() public void SelectCharacter() Setup(LayeredCharacter, LayeredCharacterSelectionList) public Task Setup(LayeredCharacter character, LayeredCharacterSelectionList list) Parameters character LayeredCharacter list LayeredCharacterSelectionList Returns Task"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.LayeredCharacterListNewCharacterEntry.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.LayeredCharacterListNewCharacterEntry.html",
    "title": "Class LayeredCharacterListNewCharacterEntry | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterListNewCharacterEntry Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class LayeredCharacterListNewCharacterEntry : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LayeredCharacterListNewCharacterEntry Methods CreateNewCharacter() public void CreateNewCharacter() Initialize(LayeredCharacterSelectionList) public void Initialize(LayeredCharacterSelectionList list) Parameters list LayeredCharacterSelectionList"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.LayeredCharacterListType.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.LayeredCharacterListType.html",
    "title": "Enum LayeredCharacterListType | BlazerTech Character Management System",
    "summary": "Enum LayeredCharacterListType Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public enum LayeredCharacterListType Fields Fixed = 1 Flexibe = 0"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.LayeredCharacterSelectionList.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.LayeredCharacterSelectionList.html",
    "title": "Class LayeredCharacterSelectionList | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterSelectionList Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class LayeredCharacterSelectionList : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LayeredCharacterSelectionList Properties CreateNewCharactersPermission public bool CreateNewCharactersPermission { get; } Property Value bool EditCharactersPermission public bool EditCharactersPermission { get; } Property Value bool EnabledAndSetup public bool EnabledAndSetup { get; } Property Value bool FixedGroupSize public int FixedGroupSize { get; } Property Value int GroupName public string GroupName { get; } Property Value string LayeredCharacterType public LayeredCharacterTypeSO LayeredCharacterType { get; set; } Property Value LayeredCharacterTypeSO ListType public LayeredCharacterListType ListType { get; } Property Value LayeredCharacterListType RemoveCharactersPermission public bool RemoveCharactersPermission { get; } Property Value bool ReorderCharactersPermission public bool ReorderCharactersPermission { get; } Property Value bool Methods CreatNewCharacterInList() public void CreatNewCharacterInList() EditCharacter(LayeredCharacter) public bool EditCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool RemoveCharacterFromList(LayeredCharacter) public bool RemoveCharacterFromList(LayeredCharacter character) Parameters character LayeredCharacter Returns bool Events OnMenuEnabledAndSetup public event EventHandler OnMenuEnabledAndSetup Event Type EventHandler OnMenuLoadingProgressUpdated public event EventHandler<float> OnMenuLoadingProgressUpdated Event Type EventHandler<float>"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.LoadingScreenProgress.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.LoadingScreenProgress.html",
    "title": "Class LoadingScreenProgress | BlazerTech Character Management System",
    "summary": "Class LoadingScreenProgress Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public abstract class LoadingScreenProgress : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LoadingScreenProgress Derived CCMLoadingBufferSpriteFillProgress LoadingScreenProgressText Methods OnLoadingProgressUpdated(object, float) protected abstract void OnLoadingProgressUpdated(object sender, float progress) Parameters sender object progress float OnLoadingStarting() protected abstract void OnLoadingStarting()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.LoadingScreenProgressText.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.LoadingScreenProgressText.html",
    "title": "Class LoadingScreenProgressText | BlazerTech Character Management System",
    "summary": "Class LoadingScreenProgressText Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class LoadingScreenProgressText : LoadingScreenProgress Inheritance object Object Component Behaviour MonoBehaviour LoadingScreenProgress LoadingScreenProgressText Methods OnLoadingProgressUpdated(object, float) protected override void OnLoadingProgressUpdated(object sender, float progress) Parameters sender object progress float OnLoadingStarting() protected override void OnLoadingStarting()"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.LoadingScreenRepeatingText.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.LoadingScreenRepeatingText.html",
    "title": "Class LoadingScreenRepeatingText | BlazerTech Character Management System",
    "summary": "Class LoadingScreenRepeatingText Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public class LoadingScreenRepeatingText : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LoadingScreenRepeatingText"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.TwoDirectional.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.TwoDirectional.html",
    "title": "Enum TwoDirectional | BlazerTech Character Management System",
    "summary": "Enum TwoDirectional Namespace BlazerTech.CharacterManagement.CharacterCreator Assembly Assembly-CSharp.dll public enum TwoDirectional Fields Left = 0 Right = 1"
  },
  "api/BlazerTech.CharacterManagement.CharacterCreator.html": {
    "href": "api/BlazerTech.CharacterManagement.CharacterCreator.html",
    "title": "Namespace BlazerTech.CharacterManagement.CharacterCreator | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.CharacterCreator Classes CCMBase Base class for all classes a part of the Character Creator Menu CCMCharacterPieceSelectionManager CCMCharacterPreviewHandler CCMLoadingBufferSpriteFillProgress CCMLoadingScreen CCMRelay CharacterCreationMenuEnablerRelay CharacterCreationMenuManager CharacterPieceDropdownSelector CharacterPieceSelector CharacterPressenceController CharacterSelectionLoadingScreen GameObjectStateNotifier LayeredCharacterListEntry LayeredCharacterListNewCharacterEntry LayeredCharacterSelectionList LoadingScreenProgress LoadingScreenProgressText LoadingScreenRepeatingText Interfaces ILoadingScreen Enums CharacterListEntryDisplayType InitializationMode LayeredCharacterListType TwoDirectional"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterBase-2.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterBase-2.html",
    "title": "Class CharacterBase<TCharacterType, TCharacterHandler> | BlazerTech Character Management System",
    "summary": "Class CharacterBase<TCharacterType, TCharacterHandler> Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public abstract class CharacterBase<TCharacterType, TCharacterHandler> where TCharacterType : CharacterTypeBaseSO where TCharacterHandler : LoadedCharacterHandlerBase Type Parameters TCharacterType TCharacterHandler Inheritance object CharacterBase<TCharacterType, TCharacterHandler> Derived LayeredCharacter UnifiedCharacter Constructors CharacterBase(string, TCharacterType) public CharacterBase(string characterName, TCharacterType characterType) Parameters characterName string characterType TCharacterType Fields CharacterDisplayName public string CharacterDisplayName Field Value string CharacterGUID public readonly Guid CharacterGUID Field Value Guid CharacterName public readonly string CharacterName Field Value string CharacterType public readonly TCharacterType CharacterType Field Value TCharacterType LoadedCharacterHandler public TCharacterHandler LoadedCharacterHandler Field Value TCharacterHandler Properties IsValidCharacter public bool IsValidCharacter { get; protected set; } Property Value bool Methods AcquireCharacterHandler(object) public TCharacterHandler AcquireCharacterHandler(object owner) Parameters owner object Returns TCharacterHandler AcquireCharacterHandlerAsync(object) public Task<TCharacterHandler> AcquireCharacterHandlerAsync(object owner) Parameters owner object Returns Task<TCharacterHandler> LoadCharacterHandler() protected abstract void LoadCharacterHandler() LoadCharacterHandlerAsync() protected abstract Task LoadCharacterHandlerAsync() Returns Task ReleaseCharacterHandler(object) public void ReleaseCharacterHandler(object owner) Parameters owner object SetCharacterInvalid() public void SetCharacterInvalid() UnloadCharacterHandler() protected virtual void UnloadCharacterHandler() ValidationCheck() public virtual bool ValidationCheck() Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterDraft.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterDraft.html",
    "title": "Class CharacterDraft | BlazerTech Character Management System",
    "summary": "Class CharacterDraft Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll Wrapper class used when editting characters in the Character Creation Menu public abstract class CharacterDraft Inheritance object CharacterDraft Derived CharacterDraft_NewCharacter CharacterDraft_PreExistingCharacter Constructors CharacterDraft(LayeredCharacter) public CharacterDraft(LayeredCharacter character) Parameters character LayeredCharacter Fields Character public readonly LayeredCharacter Character Field Value LayeredCharacter Methods SaveCharacter() public abstract void SaveCharacter()"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterDraftType.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterDraftType.html",
    "title": "Enum CharacterDraftType | BlazerTech Character Management System",
    "summary": "Enum CharacterDraftType Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public enum CharacterDraftType Fields NewCharacter = 0 PreExistingCharacter = 1"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterDraft_NewCharacter.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterDraft_NewCharacter.html",
    "title": "Class CharacterDraft_NewCharacter | BlazerTech Character Management System",
    "summary": "Class CharacterDraft_NewCharacter Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll Wrapper for a newely created character within the Character Creation Menu. Added to a group when saved. public class CharacterDraft_NewCharacter : CharacterDraft Inheritance object CharacterDraft CharacterDraft_NewCharacter Inherited Members CharacterDraft.Character Constructors CharacterDraft_NewCharacter(LayeredCharacter, CharacterGroupBase) public CharacterDraft_NewCharacter(LayeredCharacter character, CharacterGroupBase group) Parameters character LayeredCharacter group CharacterGroupBase Fields Group public CharacterGroupBase Group Field Value CharacterGroupBase Methods SaveCharacter() public override void SaveCharacter()"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterDraft_PreExistingCharacter.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterDraft_PreExistingCharacter.html",
    "title": "Class CharacterDraft_PreExistingCharacter | BlazerTech Character Management System",
    "summary": "Class CharacterDraft_PreExistingCharacter Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll Wrapper for a pre created character when being edited in the Character Creation Menu. A copy of the character is provided and edited in the menu. Changes to the copy will be applied to the original when saved. public class CharacterDraft_PreExistingCharacter : CharacterDraft Inheritance object CharacterDraft CharacterDraft_PreExistingCharacter Inherited Members CharacterDraft.Character Constructors CharacterDraft_PreExistingCharacter(LayeredCharacter, LayeredCharacter) public CharacterDraft_PreExistingCharacter(LayeredCharacter originalCharacter, LayeredCharacter characterCopy) Parameters originalCharacter LayeredCharacter characterCopy LayeredCharacter Fields OriginalCharacter public LayeredCharacter OriginalCharacter Field Value LayeredCharacter Methods SaveCharacter() public override void SaveCharacter()"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterGroupAutoSaveTriggers.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterGroupAutoSaveTriggers.html",
    "title": "Enum CharacterGroupAutoSaveTriggers | BlazerTech Character Management System",
    "summary": "Enum CharacterGroupAutoSaveTriggers Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Flags] public enum CharacterGroupAutoSaveTriggers Fields All = GameExit | CharacterCreatorSave | SceneChange CharacterCreatorSave = 2 GameExit = 1 None = 0 SceneChange = 4"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html",
    "title": "Class CharacterGroupBase | BlazerTech Character Management System",
    "summary": "Class CharacterGroupBase Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public abstract class CharacterGroupBase Inheritance object CharacterGroupBase Derived FixedCharacterGroup FlexibleCharacterGroup SingleCharacterGroup Constructors CharacterGroupBase(string, LayeredCharacterTypeSO) protected CharacterGroupBase(string groupName, LayeredCharacterTypeSO type) Parameters groupName string type LayeredCharacterTypeSO Fields CharacterType public readonly LayeredCharacterTypeSO CharacterType Field Value LayeredCharacterTypeSO Properties GroupName public string GroupName { get; protected set; } Property Value string Methods AddCharacter(LayeredCharacter) public abstract bool AddCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool ContainsCharacter(LayeredCharacter) public abstract bool ContainsCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool ContainsCharacterWithGUID(Guid) public abstract bool ContainsCharacterWithGUID(Guid guid) Parameters guid Guid Returns bool ContainsCharacterWithName(string) public abstract bool ContainsCharacterWithName(string name) Parameters name string Returns bool RaiseOnCharacterChanged(LayeredCharacter) protected void RaiseOnCharacterChanged(LayeredCharacter character) Parameters character LayeredCharacter Events OnCharacterChanged public event EventHandler<LayeredCharacter> OnCharacterChanged Event Type EventHandler<LayeredCharacter>"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterGroupEntryType.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterGroupEntryType.html",
    "title": "Enum CharacterGroupEntryType | BlazerTech Character Management System",
    "summary": "Enum CharacterGroupEntryType Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public enum CharacterGroupEntryType Fields CharacterTemplate = 1 NewCharacter = 0"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterGroupRegistry.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterGroupRegistry.html",
    "title": "Class CharacterGroupRegistry | BlazerTech Character Management System",
    "summary": "Class CharacterGroupRegistry Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll Holds a collection of three different types of groups. An instance of this class is used for each Layered Character Type. public sealed class CharacterGroupRegistry Inheritance object CharacterGroupRegistry Constructors CharacterGroupRegistry(CharacterTypeGroups_DTO, LayeredCharacterTypeSO) public CharacterGroupRegistry(CharacterTypeGroups_DTO DTO, LayeredCharacterTypeSO characterType) Parameters DTO CharacterTypeGroups_DTO characterType LayeredCharacterTypeSO CharacterGroupRegistry(LayeredCharacterTypeSO) public CharacterGroupRegistry(LayeredCharacterTypeSO type) Parameters type LayeredCharacterTypeSO Fields SuccessfullyInitialized public readonly bool SuccessfullyInitialized Field Value bool Properties CharacterType public LayeredCharacterTypeSO CharacterType { get; } Property Value LayeredCharacterTypeSO FixedGroups public Dictionary<string, FixedCharacterGroup> FixedGroups { get; } Property Value Dictionary<string, FixedCharacterGroup> FlexibleGroups public Dictionary<string, FlexibleCharacterGroup> FlexibleGroups { get; } Property Value Dictionary<string, FlexibleCharacterGroup> SingleGroup public SingleCharacterGroup SingleGroup { get; } Property Value SingleCharacterGroup Methods CreateFixedGroup(string, int) public FixedCharacterGroup CreateFixedGroup(string name, int size) Parameters name string size int Returns FixedCharacterGroup CreateFlexibleGroup(string) public FlexibleCharacterGroup CreateFlexibleGroup(string name) Parameters name string Returns FlexibleCharacterGroup GetDataTransferObject() public CharacterTypeGroups_DTO GetDataTransferObject() Returns CharacterTypeGroups_DTO GetOrCreateFixedGroup(string, int) public FixedCharacterGroup GetOrCreateFixedGroup(string name, int size) Parameters name string size int Returns FixedCharacterGroup GetOrCreateFlexibleGroup(string) public FlexibleCharacterGroup GetOrCreateFlexibleGroup(string name) Parameters name string Returns FlexibleCharacterGroup"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterGroupType.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterGroupType.html",
    "title": "Enum CharacterGroupType | BlazerTech Character Management System",
    "summary": "Enum CharacterGroupType Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public enum CharacterGroupType Fields FixedGroup = 2 FlexibleGroup = 1 SingleGroup = 0"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html",
    "title": "Class CharacterLayerSO | BlazerTech Character Management System",
    "summary": "Class CharacterLayerSO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"BlazerTech Character Management System/Character Layer\", fileName = \"New Character Layer\")] public class CharacterLayerSO : ScriptableObject, IValidatable Inheritance object Object ScriptableObject CharacterLayerSO Implements IValidatable Properties AttachedCharacterType public LayeredCharacterTypeSO AttachedCharacterType { get; } Property Value LayeredCharacterTypeSO CharacterPieces public List<CharacterPieceDefinition> CharacterPieces { get; } Property Value List<CharacterPieceDefinition> IncludeNoneOption public bool IncludeNoneOption { get; } Property Value bool LayerName public string LayerName { get; } Property Value string Methods AcquireAllCharacterPiecesAsync(Action<float>) public Task AcquireAllCharacterPiecesAsync(Action<float> onProgress = null) Parameters onProgress Action<float> Returns Task GetCharacterPieceInfoFromIndex(int) public CharacterPieceDefinition GetCharacterPieceInfoFromIndex(int index) Parameters index int Returns CharacterPieceDefinition GetCharacterPieceInfoFromKey(string) public CharacterPieceDefinition GetCharacterPieceInfoFromKey(string key) Parameters key string Returns CharacterPieceDefinition GetCharacterPieceInfoFromSpritesheetName(string) public CharacterPieceDefinition GetCharacterPieceInfoFromSpritesheetName(string spritesheetName) Parameters spritesheetName string Returns CharacterPieceDefinition GetCharacterPieces_EditMode() [Button(\"Get Character Pieces\", EButtonEnableMode.Always)] [EnableIf(\"IsEditmode\")] public void GetCharacterPieces_EditMode() Initialize(LayeredCharacterTypeSO) public bool Initialize(LayeredCharacterTypeSO characterType) Parameters characterType LayeredCharacterTypeSO Returns bool IsInitialized() public bool IsInitialized() Returns bool IsValid() public bool IsValid() Returns bool ReleaseAllCharacterPieces() public void ReleaseAllCharacterPieces()"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.CharacterPieceDefinition_DTO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.CharacterPieceDefinition_DTO.html",
    "title": "Class CharacterPieceDefinition.CharacterPieceDefinition_DTO | BlazerTech Character Management System",
    "summary": "Class CharacterPieceDefinition.CharacterPieceDefinition_DTO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll Data Transfer Object (DTO) used to save and load a CharacterPieceDefinition. [Serializable] public class CharacterPieceDefinition.CharacterPieceDefinition_DTO Inheritance object CharacterPieceDefinition.CharacterPieceDefinition_DTO Constructors CharacterPieceDefinition_DTO(CharacterPieceDefinition) public CharacterPieceDefinition_DTO(CharacterPieceDefinition characterPieceInfo) Parameters characterPieceInfo CharacterPieceDefinition CharacterPieceDefinition_DTO(string, string) public CharacterPieceDefinition_DTO(string characterPieceCollectionName, string characterPieceKey) Parameters characterPieceCollectionName string characterPieceKey string Fields CharacterPieceCollectionName public string CharacterPieceCollectionName Field Value string CharacterPieceKey public string CharacterPieceKey Field Value string"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.LoadedSpriteDataContainer.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.LoadedSpriteDataContainer.html",
    "title": "Class CharacterPieceDefinition.LoadedSpriteDataContainer | BlazerTech Character Management System",
    "summary": "Class CharacterPieceDefinition.LoadedSpriteDataContainer Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public class CharacterPieceDefinition.LoadedSpriteDataContainer Inheritance object CharacterPieceDefinition.LoadedSpriteDataContainer Constructors LoadedSpriteDataContainer(LayeredCharacterTypeSO, Sprite, string) public LoadedSpriteDataContainer(LayeredCharacterTypeSO characterTypeSO, Sprite spritesheet, string displayName) Parameters characterTypeSO LayeredCharacterTypeSO spritesheet Sprite displayName string Fields DisplayName public readonly string DisplayName Field Value string Spritesheet public readonly Sprite Spritesheet Field Value Sprite Methods GetAndCreateCharacterPreview() Get the created character preview and create a new one if one does not already exist. public Sprite GetAndCreateCharacterPreview() Returns Sprite The generated character preview sprite"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.html",
    "title": "Class CharacterPieceDefinition | BlazerTech Character Management System",
    "summary": "Class CharacterPieceDefinition Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public class CharacterPieceDefinition : OwnedResourceTracker<CharacterPieceDefinition.LoadedSpriteDataContainer> Inheritance object OwnedResourceTracker<CharacterPieceDefinition.LoadedSpriteDataContainer> CharacterPieceDefinition Inherited Members OwnedResourceTracker<CharacterPieceDefinition.LoadedSpriteDataContainer>.Owners OwnedResourceTracker<CharacterPieceDefinition.LoadedSpriteDataContainer>.ReleaseResource(object) Constructors CharacterPieceDefinition(string, string, int, CharacterLayerSO, bool) public CharacterPieceDefinition(string spritesheetName, string key, int index, CharacterLayerSO collection, bool ignoreSpriteCheck = false) Parameters spritesheetName string key string index int collection CharacterLayerSO ignoreSpriteCheck bool Fields CharacterPieceCollection [Space] public CharacterLayerSO CharacterPieceCollection Field Value CharacterLayerSO DisplayNameOverride public string DisplayNameOverride Field Value string Index public int Index Field Value int Key [Space] public string Key Field Value string LoadedSpriteData public CharacterPieceDefinition.LoadedSpriteDataContainer LoadedSpriteData Field Value CharacterPieceDefinition.LoadedSpriteDataContainer SpritesheetName public string SpritesheetName Field Value string Methods AcquireResource(object) Acquires the resource for an owner public override CharacterPieceDefinition.LoadedSpriteDataContainer AcquireResource(object owner) Parameters owner object Object claiming ownership Returns CharacterPieceDefinition.LoadedSpriteDataContainer Managed resource AcquireResourceAsync(object) Acquires the resource for an owner asynchronously public override Task<CharacterPieceDefinition.LoadedSpriteDataContainer> AcquireResourceAsync(object owner) Parameters owner object Object claiming ownership Returns Task<CharacterPieceDefinition.LoadedSpriteDataContainer> Managed resource GetAndLoadResource() protected override CharacterPieceDefinition.LoadedSpriteDataContainer GetAndLoadResource() Returns CharacterPieceDefinition.LoadedSpriteDataContainer GetAndLoadResourceAsync() protected override Task<CharacterPieceDefinition.LoadedSpriteDataContainer> GetAndLoadResourceAsync() Returns Task<CharacterPieceDefinition.LoadedSpriteDataContainer> UnloadResource() protected override void UnloadResource()"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterPieceMapping.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterPieceMapping.html",
    "title": "Class CharacterPieceMapping | BlazerTech Character Management System",
    "summary": "Class CharacterPieceMapping Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll References a CharacterPieceDefinition within a CharacterLayerSO by spritesheet name. [Serializable] public class CharacterPieceMapping Inheritance object CharacterPieceMapping Constructors CharacterPieceMapping(CharacterLayerSO) public CharacterPieceMapping(CharacterLayerSO collectionSO) Parameters collectionSO CharacterLayerSO Fields SelectedCharacterPieceName public string SelectedCharacterPieceName Field Value string characterPieceCollection public CharacterLayerSO characterPieceCollection Field Value CharacterLayerSO"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterTemplateBaseSO-2.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterTemplateBaseSO-2.html",
    "title": "Class CharacterTemplateBaseSO<TCharacterType, TCharacter> | BlazerTech Character Management System",
    "summary": "Class CharacterTemplateBaseSO<TCharacterType, TCharacter> Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll Base class for all Character Templates. public abstract class CharacterTemplateBaseSO<TCharacterType, TCharacter> : ScriptableObject where TCharacterType : CharacterTypeBaseSO Type Parameters TCharacterType TCharacter Inheritance object Object ScriptableObject CharacterTemplateBaseSO<TCharacterType, TCharacter> Derived LayeredCharacterTemplateSO UnifiedCharacterTemplateSO Properties CharacterDisplayName public string CharacterDisplayName { get; } Property Value string CharacterName public string CharacterName { get; } Property Value string CharacterType public TCharacterType CharacterType { get; } Property Value TCharacterType Methods CreateNewCharacter() protected abstract TCharacter CreateNewCharacter() Returns TCharacter GetOrCreateCharacter() public TCharacter GetOrCreateCharacter() Returns TCharacter"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html",
    "title": "Class CharacterTypeBaseSO | BlazerTech Character Management System",
    "summary": "Class CharacterTypeBaseSO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll bass Scriptable Object for all Character Types. public abstract class CharacterTypeBaseSO : ScriptableObject Inheritance object Object ScriptableObject CharacterTypeBaseSO Derived LayeredCharacterTypeSO UnifiedCharacterTypeSO Properties BaseSpritesheet Defines the required base sprite sheet for the character type. Set this spritesheets Sprite Mode to Multiple and slice it. Whenever this character is used the sprites in the BaseSpritesheet will be used and a shader will then override them with the finalized character. Character spritesheets with mismatched dimensions will be rejected when validated. public Sprite BaseSpritesheet { get; } Property Value Sprite CharacterController The animator controller asset assigned to characters of this type. Animations inside this controller should use sprites in the BaseSpritesheet. public RuntimeAnimatorController CharacterController { get; } Property Value RuntimeAnimatorController CharacterTypeID A unique identifier used to reference this character type. Must be unique across all character types. public string CharacterTypeID { get; } Property Value string Methods IsValidCharacterSpriteSheet(Sprite) Returns true if the sprite fits the conditions for the Character Type public virtual bool IsValidCharacterSpriteSheet(Sprite sprite) Parameters sprite Sprite Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Characters.CharacterTypeGroups_DTO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.CharacterTypeGroups_DTO.html",
    "title": "Class CharacterTypeGroups_DTO | BlazerTech Character Management System",
    "summary": "Class CharacterTypeGroups_DTO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public class CharacterTypeGroups_DTO Inheritance object CharacterTypeGroups_DTO Constructors CharacterTypeGroups_DTO(CharacterGroupRegistry) public CharacterTypeGroups_DTO(CharacterGroupRegistry characterTypeGroups) Parameters characterTypeGroups CharacterGroupRegistry Fields CharacterTypeIdentifier public string CharacterTypeIdentifier Field Value string FixedGroups public List<FixedCharacterGroup.FixedCharacterGroup_DTO> FixedGroups Field Value List<FixedCharacterGroup.FixedCharacterGroup_DTO> FlexibleGroups public List<FlexibleCharacterGroup.FlexibleCharacterGroup_DTO> FlexibleGroups Field Value List<FlexibleCharacterGroup.FlexibleCharacterGroup_DTO> SingleGroup public SingleCharacterGroup.SingleCharacterGroup_DTO SingleGroup Field Value SingleCharacterGroup.SingleCharacterGroup_DTO Methods IsValid() public bool IsValid() Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Characters.EquippedCharacterPiece.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.EquippedCharacterPiece.html",
    "title": "Class EquippedCharacterPiece | BlazerTech Character Management System",
    "summary": "Class EquippedCharacterPiece Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll A wrapper for CharacterPieceDefinition. used as a list in LayeredCharacter. [Serializable] public class EquippedCharacterPiece Inheritance object EquippedCharacterPiece Constructors EquippedCharacterPiece(EquippedCharacterPiece) public EquippedCharacterPiece(EquippedCharacterPiece characterPiece) Parameters characterPiece EquippedCharacterPiece EquippedCharacterPiece(LayeredCharacter, CharacterPieceDefinition, CharacterLayerSO) public EquippedCharacterPiece(LayeredCharacter attachedCharacter, CharacterPieceDefinition characterPieceInfo, CharacterLayerSO characterPieceCollection) Parameters attachedCharacter LayeredCharacter characterPieceInfo CharacterPieceDefinition characterPieceCollection CharacterLayerSO Fields AttachedCharacter [NonSerialized] public LayeredCharacter AttachedCharacter Field Value LayeredCharacter CharacterPieceCollection public CharacterLayerSO CharacterPieceCollection Field Value CharacterLayerSO Properties CharacterPieceInfo public CharacterPieceDefinition CharacterPieceInfo { get; set; } Property Value CharacterPieceDefinition Events OnCharacterPieceUpdated public event EventHandler<CharacterPieceDefinition> OnCharacterPieceUpdated Event Type EventHandler<CharacterPieceDefinition>"
  },
  "api/BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO.html",
    "title": "Class FixedCharacterGroup.FixedCharacterGroup_DTO | BlazerTech Character Management System",
    "summary": "Class FixedCharacterGroup.FixedCharacterGroup_DTO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public class FixedCharacterGroup.FixedCharacterGroup_DTO Inheritance object FixedCharacterGroup.FixedCharacterGroup_DTO Constructors FixedCharacterGroup_DTO(FixedCharacterGroup) public FixedCharacterGroup_DTO(FixedCharacterGroup fixedCharacterGroup) Parameters fixedCharacterGroup FixedCharacterGroup FixedCharacterGroup_DTO(string, LayeredCharacter[]) public FixedCharacterGroup_DTO(string groupName, LayeredCharacter[] characters) Parameters groupName string characters LayeredCharacter[] Fields Characters public LayeredCharacter.Character_DTO[] Characters Field Value Character_DTO[] GroupName public string GroupName Field Value string"
  },
  "api/BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.html",
    "title": "Class FixedCharacterGroup | BlazerTech Character Management System",
    "summary": "Class FixedCharacterGroup Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public sealed class FixedCharacterGroup : CharacterGroupBase Inheritance object CharacterGroupBase FixedCharacterGroup Inherited Members CharacterGroupBase.GroupName CharacterGroupBase.CharacterType CharacterGroupBase.OnCharacterChanged Constructors FixedCharacterGroup(FixedCharacterGroup_DTO, LayeredCharacterTypeSO) public FixedCharacterGroup(FixedCharacterGroup.FixedCharacterGroup_DTO DTO, LayeredCharacterTypeSO characterType) Parameters DTO FixedCharacterGroup.FixedCharacterGroup_DTO characterType LayeredCharacterTypeSO FixedCharacterGroup(string, int, LayeredCharacterTypeSO) public FixedCharacterGroup(string groupName, int size, LayeredCharacterTypeSO characterType) Parameters groupName string size int characterType LayeredCharacterTypeSO Fields Characters public readonly LayeredCharacter[] Characters Field Value LayeredCharacter[] Methods AddCharacter(LayeredCharacter) public override bool AddCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool ContainsCharacter(LayeredCharacter) public override bool ContainsCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool ContainsCharacterWithGUID(Guid) public override bool ContainsCharacterWithGUID(Guid guid) Parameters guid Guid Returns bool ContainsCharacterWithName(string) public override bool ContainsCharacterWithName(string name) Parameters name string Returns bool ReplaceAt(int, LayeredCharacter) Replace a character at a specified index with another character. public bool ReplaceAt(int index, LayeredCharacter character) Parameters index int character LayeredCharacter Returns bool SwapCharacters(int, int) Swaps two characters at the specified indexes. public void SwapCharacters(int indexA, int indexB) Parameters indexA int The index of the first character to swap. indexB int The index of the second character to swap. Exceptions ArgumentOutOfRangeException Thrown if indexA or indexB is outside the bounds of the list."
  },
  "api/BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroup.FlexibleCharacterGroup_DTO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroup.FlexibleCharacterGroup_DTO.html",
    "title": "Class FlexibleCharacterGroup.FlexibleCharacterGroup_DTO | BlazerTech Character Management System",
    "summary": "Class FlexibleCharacterGroup.FlexibleCharacterGroup_DTO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public class FlexibleCharacterGroup.FlexibleCharacterGroup_DTO Inheritance object FlexibleCharacterGroup.FlexibleCharacterGroup_DTO Constructors FlexibleCharacterGroup_DTO(FlexibleCharacterGroup) public FlexibleCharacterGroup_DTO(FlexibleCharacterGroup flexibleCharacterGroup) Parameters flexibleCharacterGroup FlexibleCharacterGroup FlexibleCharacterGroup_DTO(string, List<LayeredCharacter>) public FlexibleCharacterGroup_DTO(string groupName, List<LayeredCharacter> characters) Parameters groupName string characters List<LayeredCharacter> Fields Characters public List<LayeredCharacter.Character_DTO> Characters Field Value List<LayeredCharacter.Character_DTO> GroupName public string GroupName Field Value string"
  },
  "api/BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroup.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroup.html",
    "title": "Class FlexibleCharacterGroup | BlazerTech Character Management System",
    "summary": "Class FlexibleCharacterGroup Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public sealed class FlexibleCharacterGroup : CharacterGroupBase Inheritance object CharacterGroupBase FlexibleCharacterGroup Inherited Members CharacterGroupBase.GroupName CharacterGroupBase.CharacterType CharacterGroupBase.OnCharacterChanged Constructors FlexibleCharacterGroup(FlexibleCharacterGroup_DTO, LayeredCharacterTypeSO) public FlexibleCharacterGroup(FlexibleCharacterGroup.FlexibleCharacterGroup_DTO DTO, LayeredCharacterTypeSO characterType) Parameters DTO FlexibleCharacterGroup.FlexibleCharacterGroup_DTO characterType LayeredCharacterTypeSO FlexibleCharacterGroup(LayeredCharacterTypeSO, string) public FlexibleCharacterGroup(LayeredCharacterTypeSO characterType, string groupName) Parameters characterType LayeredCharacterTypeSO groupName string Properties Characters public IReadOnlyList<LayeredCharacter> Characters { get; } Property Value IReadOnlyList<LayeredCharacter> Methods AddCharacter(LayeredCharacter) public override bool AddCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool ContainsCharacter(LayeredCharacter) public override bool ContainsCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool ContainsCharacterWithGUID(Guid) public override bool ContainsCharacterWithGUID(Guid guid) Parameters guid Guid Returns bool ContainsCharacterWithName(string) public override bool ContainsCharacterWithName(string name) Parameters name string Returns bool RemoveCharacter(LayeredCharacter) public bool RemoveCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool SwapCharacters(int, int) Swaps two characters at the specified indexes. public void SwapCharacters(int indexA, int indexB) Parameters indexA int The index of the first character to swap. indexB int The index of the second character to swap. Exceptions ArgumentOutOfRangeException Thrown if indexA or indexB is outside the bounds of the list."
  },
  "api/BlazerTech.CharacterManagement.Characters.GroupTemplateEntry.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.GroupTemplateEntry.html",
    "title": "Class GroupTemplateEntry | BlazerTech Character Management System",
    "summary": "Class GroupTemplateEntry Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public class GroupTemplateEntry Inheritance object GroupTemplateEntry Properties EntryType public CharacterGroupEntryType EntryType { get; } Property Value CharacterGroupEntryType Template public LayeredCharacterTemplateSO Template { get; } Property Value LayeredCharacterTemplateSO"
  },
  "api/BlazerTech.CharacterManagement.Characters.LayeredCharacter.Character_DTO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LayeredCharacter.Character_DTO.html",
    "title": "Class LayeredCharacter.Character_DTO | BlazerTech Character Management System",
    "summary": "Class LayeredCharacter.Character_DTO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public class LayeredCharacter.Character_DTO Inheritance object LayeredCharacter.Character_DTO Constructors Character_DTO(LayeredCharacter) public Character_DTO(LayeredCharacter character) Parameters character LayeredCharacter Fields CharacterDisplayName public string CharacterDisplayName Field Value string CharacterName public string CharacterName Field Value string CharacterPieces public List<CharacterPieceDefinition.CharacterPieceDefinition_DTO> CharacterPieces Field Value List<CharacterPieceDefinition.CharacterPieceDefinition_DTO> CharacterTypeIdentifier public string CharacterTypeIdentifier Field Value string"
  },
  "api/BlazerTech.CharacterManagement.Characters.LayeredCharacter.LoadedLayeredCharacterHandler.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LayeredCharacter.LoadedLayeredCharacterHandler.html",
    "title": "Class LayeredCharacter.LoadedLayeredCharacterHandler | BlazerTech Character Management System",
    "summary": "Class LayeredCharacter.LoadedLayeredCharacterHandler Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public class LayeredCharacter.LoadedLayeredCharacterHandler : LoadedCharacterHandlerBase Inheritance object LoadedCharacterHandlerBase LayeredCharacter.LoadedLayeredCharacterHandler Inherited Members LoadedCharacterHandlerBase.CharacterMPB Constructors LoadedLayeredCharacterHandler(LayeredCharacter) public LoadedLayeredCharacterHandler(LayeredCharacter character) Parameters character LayeredCharacter Methods CreateNewCharacterMaterial() public Material CreateNewCharacterMaterial() Returns Material CreateNewCharacterMaterialAsync() public Task<Material> CreateNewCharacterMaterialAsync() Returns Task<Material> LoadUnloadedCharacterPiecesAsync() public Task LoadUnloadedCharacterPiecesAsync() Returns Task Release() public override void Release() UpdateCharacterMaterialAsync() public void UpdateCharacterMaterialAsync() Events OnCharacterUpdated public event EventHandler OnCharacterUpdated Event Type EventHandler"
  },
  "api/BlazerTech.CharacterManagement.Characters.LayeredCharacter.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LayeredCharacter.html",
    "title": "Class LayeredCharacter | BlazerTech Character Management System",
    "summary": "Class LayeredCharacter Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public class LayeredCharacter : CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler> Inheritance object CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler> LayeredCharacter Inherited Members CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.CharacterType CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.LoadedCharacterHandler CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.CharacterGUID CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.CharacterName CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.CharacterDisplayName CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.IsValidCharacter CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.ValidationCheck() CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.SetCharacterInvalid() CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.AcquireCharacterHandler(object) CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.AcquireCharacterHandlerAsync(object) CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.ReleaseCharacterHandler(object) CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.LoadCharacterHandler() CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.LoadCharacterHandlerAsync() CharacterBase<LayeredCharacterTypeSO, LayeredCharacter.LoadedLayeredCharacterHandler>.UnloadCharacterHandler() Constructors LayeredCharacter(LayeredCharacter) Duplicate Character. public LayeredCharacter(LayeredCharacter character) Parameters character LayeredCharacter LayeredCharacter(Character_DTO) public LayeredCharacter(LayeredCharacter.Character_DTO character_DTO) Parameters character_DTO LayeredCharacter.Character_DTO LayeredCharacter(LayeredCharacterTemplateSO) Create Character from Template. public LayeredCharacter(LayeredCharacterTemplateSO template) Parameters template LayeredCharacterTemplateSO LayeredCharacter(string, LayeredCharacterTypeSO) Create new blank character. public LayeredCharacter(string characterName, LayeredCharacterTypeSO characterType) Parameters characterName string characterType LayeredCharacterTypeSO Fields CharacterPieces public List<EquippedCharacterPiece> CharacterPieces Field Value List<EquippedCharacterPiece> Methods LoadCharacterHandler() protected override void LoadCharacterHandler() LoadCharacterHandlerAsync() protected override Task LoadCharacterHandlerAsync() Returns Task OverrideCharacterPieces(LayeredCharacter) Sets the characters pieces equal to the same character pieces of another Layered Character. public void OverrideCharacterPieces(LayeredCharacter character) Parameters character LayeredCharacter UnloadCharacterHandler() protected override void UnloadCharacterHandler() ValidationCheck() public override bool ValidationCheck() Returns bool Events OnCharacterPiecesOverriden public event EventHandler OnCharacterPiecesOverriden Event Type EventHandler"
  },
  "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupManager.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupManager.html",
    "title": "Class LayeredCharacterGroupManager | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterGroupManager Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public static class LayeredCharacterGroupManager Inheritance object LayeredCharacterGroupManager Fields CharacterTypeGroupsAutoSaveTriggers public static CharacterGroupAutoSaveTriggers CharacterTypeGroupsAutoSaveTriggers Field Value CharacterGroupAutoSaveTriggers SavedCharactersDirectory public const string SavedCharactersDirectory = \"BlazerTech Character Management System\" Field Value string SavedCharactersFilename public const string SavedCharactersFilename = \"Saved Characters\" Field Value string groupsByType public static readonly Dictionary<LayeredCharacterTypeSO, CharacterGroupRegistry> groupsByType Field Value Dictionary<LayeredCharacterTypeSO, CharacterGroupRegistry> Methods GetGroupsForType(LayeredCharacterTypeSO) public static CharacterGroupRegistry GetGroupsForType(LayeredCharacterTypeSO type) Parameters type LayeredCharacterTypeSO Returns CharacterGroupRegistry Initialize() public static void Initialize() LoadCharacterGroups() Load previously saved character groups. public static void LoadCharacterGroups() SaveCharacterGroupsImmediate() Saves all character groups to json files. Separated by Character Type. public static void SaveCharacterGroupsImmediate() ScheduleSaveCharacterGroups() calls SaveCharacterGroupsImmediate() on the next frame. public static Task ScheduleSaveCharacterGroups() Returns Task"
  },
  "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO.html",
    "title": "Class LayeredCharacterGroupTemplateSO | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterGroupTemplateSO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll A blueprint for a Layered Character Group (Fixed or Flexible) that will automatically be created at runtime. [CreateAssetMenu(menuName = \"BlazerTech Character Management System/Layered Character Group Template\", fileName = \"New Layered Character Group Template\")] public class LayeredCharacterGroupTemplateSO : ScriptableObject Inheritance object Object ScriptableObject LayeredCharacterGroupTemplateSO Properties CharacterBaseName public string CharacterBaseName { get; } Property Value string CharacterType public LayeredCharacterTypeSO CharacterType { get; } Property Value LayeredCharacterTypeSO CharactersInGroup public GroupTemplateEntry[] CharactersInGroup { get; } Property Value GroupTemplateEntry[] GroupName public string GroupName { get; } Property Value string GroupType public MultiCharacterGroupType GroupType { get; } Property Value MultiCharacterGroupType Methods CreateGroup() public bool CreateGroup() Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterTemplateSO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterTemplateSO.html",
    "title": "Class LayeredCharacterTemplateSO | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterTemplateSO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"BlazerTech Character Management System/Layered Character Template\", fileName = \"New Layered Character Template\")] public class LayeredCharacterTemplateSO : CharacterTemplateBaseSO<LayeredCharacterTypeSO, LayeredCharacter> Inheritance object Object ScriptableObject CharacterTemplateBaseSO<LayeredCharacterTypeSO, LayeredCharacter> LayeredCharacterTemplateSO Inherited Members CharacterTemplateBaseSO<LayeredCharacterTypeSO, LayeredCharacter>.CharacterType CharacterTemplateBaseSO<LayeredCharacterTypeSO, LayeredCharacter>.CharacterName CharacterTemplateBaseSO<LayeredCharacterTypeSO, LayeredCharacter>.CharacterDisplayName CharacterTemplateBaseSO<LayeredCharacterTypeSO, LayeredCharacter>.GetOrCreateCharacter() CharacterTemplateBaseSO<LayeredCharacterTypeSO, LayeredCharacter>.CreateNewCharacter() Properties CharacterPieceMappings public List<CharacterPieceMapping> CharacterPieceMappings { get; } Property Value List<CharacterPieceMapping> Methods CreateNewCharacter() protected override LayeredCharacter CreateNewCharacter() Returns LayeredCharacter PerformValidationCheck() public bool PerformValidationCheck() Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.CharacterCreatorConfig.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.CharacterCreatorConfig.html",
    "title": "Class LayeredCharacterTypeSO.CharacterCreatorConfig | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterTypeSO.CharacterCreatorConfig Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public class LayeredCharacterTypeSO.CharacterCreatorConfig Inheritance object LayeredCharacterTypeSO.CharacterCreatorConfig Fields CharacterPlaceholderSprite public Sprite CharacterPlaceholderSprite Field Value Sprite CharacterPreviewController [Space] public RuntimeAnimatorController CharacterPreviewController Field Value RuntimeAnimatorController CharacterPreviewFrameIndex public int CharacterPreviewFrameIndex Field Value int PreviewFrameHeight public int PreviewFrameHeight Field Value int PreviewFrameWidth [Header(\"Character Piece Preview Settings\")] public int PreviewFrameWidth Field Value int UseCleanCharacterPieceNames [Tooltip(\"Automatically replaces underscores with spaces when displaying character piece names\")] public bool UseCleanCharacterPieceNames Field Value bool Properties BaseCharacterPieceCollection public CharacterLayerSO BaseCharacterPieceCollection { get; } Property Value CharacterLayerSO BaseCharacterPieceLoadedSpriteIndex public int BaseCharacterPieceLoadedSpriteIndex { get; } Property Value int"
  },
  "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html",
    "title": "Class LayeredCharacterTypeSO | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterTypeSO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [HelpURL(\"https://legendaryswordsman2.github.io/BT-Character-Management-System-Docs/api/BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html\")] [CreateAssetMenu(menuName = \"BlazerTech Character Management System/Layered Character Type\", fileName = \"New Layered Character Type\")] public class LayeredCharacterTypeSO : CharacterTypeBaseSO, IValidatable Inheritance object Object ScriptableObject CharacterTypeBaseSO LayeredCharacterTypeSO Implements IValidatable Inherited Members CharacterTypeBaseSO.CharacterTypeID CharacterTypeBaseSO.BaseSpritesheet CharacterTypeBaseSO.CharacterController CharacterTypeBaseSO.IsValidCharacterSpriteSheet(Sprite) Properties CharacterCreatorSettings public LayeredCharacterTypeSO.CharacterCreatorConfig CharacterCreatorSettings { get; } Property Value LayeredCharacterTypeSO.CharacterCreatorConfig CharacterMaterial public Material CharacterMaterial { get; } Property Value Material Layers public List<CharacterLayerSO> Layers { get; } Property Value List<CharacterLayerSO> Methods AcquireAllCharacterPiecesAsync(Action<float>) public Task AcquireAllCharacterPiecesAsync(Action<float> onProgress = null) Parameters onProgress Action<float> Returns Task Initialize(Material) public bool Initialize(Material characterMaterial) Parameters characterMaterial Material Returns bool IsInResourcesFolder_EditMode() public bool IsInResourcesFolder_EditMode() Returns bool IsInitialized() public bool IsInitialized() Returns bool IsValid() public bool IsValid() Returns bool ReleaseAllCharacterPieces() public void ReleaseAllCharacterPieces()"
  },
  "api/BlazerTech.CharacterManagement.Characters.LoadedCharacterHandlerBase.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.LoadedCharacterHandlerBase.html",
    "title": "Class LoadedCharacterHandlerBase | BlazerTech Character Management System",
    "summary": "Class LoadedCharacterHandlerBase Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public abstract class LoadedCharacterHandlerBase Inheritance object LoadedCharacterHandlerBase Derived LayeredCharacter.LoadedLayeredCharacterHandler UnifiedCharacter.LoadedUnifiedCharacterHandler Constructors LoadedCharacterHandlerBase() public LoadedCharacterHandlerBase() Properties CharacterMPB public MaterialPropertyBlock CharacterMPB { get; } Property Value MaterialPropertyBlock Methods Release() public abstract void Release()"
  },
  "api/BlazerTech.CharacterManagement.Characters.MultiCharacterGroupType.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.MultiCharacterGroupType.html",
    "title": "Enum MultiCharacterGroupType | BlazerTech Character Management System",
    "summary": "Enum MultiCharacterGroupType Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public enum MultiCharacterGroupType Fields FixedGroup = 1 FlexibleGroup = 0"
  },
  "api/BlazerTech.CharacterManagement.Characters.SingleCharacterGroup.SingleCharacterGroup_DTO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.SingleCharacterGroup.SingleCharacterGroup_DTO.html",
    "title": "Class SingleCharacterGroup.SingleCharacterGroup_DTO | BlazerTech Character Management System",
    "summary": "Class SingleCharacterGroup.SingleCharacterGroup_DTO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public class SingleCharacterGroup.SingleCharacterGroup_DTO Inheritance object SingleCharacterGroup.SingleCharacterGroup_DTO Constructors SingleCharacterGroup_DTO(LayeredCharacter, string) public SingleCharacterGroup_DTO(LayeredCharacter character, string groupName) Parameters character LayeredCharacter groupName string SingleCharacterGroup_DTO(SingleCharacterGroup) public SingleCharacterGroup_DTO(SingleCharacterGroup singleCharacterGroup) Parameters singleCharacterGroup SingleCharacterGroup Fields Character public LayeredCharacter.Character_DTO Character Field Value LayeredCharacter.Character_DTO GroupName public string GroupName Field Value string"
  },
  "api/BlazerTech.CharacterManagement.Characters.SingleCharacterGroup.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.SingleCharacterGroup.html",
    "title": "Class SingleCharacterGroup | BlazerTech Character Management System",
    "summary": "Class SingleCharacterGroup Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [Serializable] public sealed class SingleCharacterGroup : CharacterGroupBase Inheritance object CharacterGroupBase SingleCharacterGroup Inherited Members CharacterGroupBase.GroupName CharacterGroupBase.CharacterType CharacterGroupBase.OnCharacterChanged Constructors SingleCharacterGroup(LayeredCharacterTypeSO, string) public SingleCharacterGroup(LayeredCharacterTypeSO characterType, string groupName = \"Single\") Parameters characterType LayeredCharacterTypeSO groupName string SingleCharacterGroup(SingleCharacterGroup_DTO, LayeredCharacterTypeSO) public SingleCharacterGroup(SingleCharacterGroup.SingleCharacterGroup_DTO DTO, LayeredCharacterTypeSO characterType) Parameters DTO SingleCharacterGroup.SingleCharacterGroup_DTO characterType LayeredCharacterTypeSO Properties Character public LayeredCharacter Character { get; } Property Value LayeredCharacter Methods AddCharacter(LayeredCharacter) Set or replace the character currently in the Single Group public override bool AddCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool ContainsCharacter(LayeredCharacter) public override bool ContainsCharacter(LayeredCharacter character) Parameters character LayeredCharacter Returns bool ContainsCharacterWithGUID(Guid) public override bool ContainsCharacterWithGUID(Guid guid) Parameters guid Guid Returns bool ContainsCharacterWithName(string) public override bool ContainsCharacterWithName(string name) Parameters name string Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Characters.UnifiedCharacter.LoadedUnifiedCharacterHandler.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.UnifiedCharacter.LoadedUnifiedCharacterHandler.html",
    "title": "Class UnifiedCharacter.LoadedUnifiedCharacterHandler | BlazerTech Character Management System",
    "summary": "Class UnifiedCharacter.LoadedUnifiedCharacterHandler Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public class UnifiedCharacter.LoadedUnifiedCharacterHandler : LoadedCharacterHandlerBase Inheritance object LoadedCharacterHandlerBase UnifiedCharacter.LoadedUnifiedCharacterHandler Inherited Members LoadedCharacterHandlerBase.CharacterMPB Constructors LoadedUnifiedCharacterHandler(UnifiedCharacter) public LoadedUnifiedCharacterHandler(UnifiedCharacter character) Parameters character UnifiedCharacter Methods LoadCharacter() public void LoadCharacter() LoadCharacterAsync() public Task LoadCharacterAsync() Returns Task Release() public override void Release()"
  },
  "api/BlazerTech.CharacterManagement.Characters.UnifiedCharacter.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.UnifiedCharacter.html",
    "title": "Class UnifiedCharacter | BlazerTech Character Management System",
    "summary": "Class UnifiedCharacter Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll public class UnifiedCharacter : CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler> Inheritance object CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler> UnifiedCharacter Inherited Members CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.CharacterType CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.LoadedCharacterHandler CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.CharacterGUID CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.CharacterName CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.CharacterDisplayName CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.IsValidCharacter CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.ValidationCheck() CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.SetCharacterInvalid() CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.AcquireCharacterHandler(object) CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.AcquireCharacterHandlerAsync(object) CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.ReleaseCharacterHandler(object) CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.LoadCharacterHandler() CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.LoadCharacterHandlerAsync() CharacterBase<UnifiedCharacterTypeSO, UnifiedCharacter.LoadedUnifiedCharacterHandler>.UnloadCharacterHandler() Constructors UnifiedCharacter(UnifiedCharacterTemplateSO) public UnifiedCharacter(UnifiedCharacterTemplateSO unifiedCharacterTemplate) Parameters unifiedCharacterTemplate UnifiedCharacterTemplateSO Methods LoadCharacterHandler() protected override void LoadCharacterHandler() LoadCharacterHandlerAsync() protected override Task LoadCharacterHandlerAsync() Returns Task"
  },
  "api/BlazerTech.CharacterManagement.Characters.UnifiedCharacterTemplateSO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.UnifiedCharacterTemplateSO.html",
    "title": "Class UnifiedCharacterTemplateSO | BlazerTech Character Management System",
    "summary": "Class UnifiedCharacterTemplateSO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"BlazerTech Character Management System/Unified Character Template\", fileName = \"New Character Template\")] public class UnifiedCharacterTemplateSO : CharacterTemplateBaseSO<UnifiedCharacterTypeSO, UnifiedCharacter> Inheritance object Object ScriptableObject CharacterTemplateBaseSO<UnifiedCharacterTypeSO, UnifiedCharacter> UnifiedCharacterTemplateSO Inherited Members CharacterTemplateBaseSO<UnifiedCharacterTypeSO, UnifiedCharacter>.CharacterType CharacterTemplateBaseSO<UnifiedCharacterTypeSO, UnifiedCharacter>.CharacterName CharacterTemplateBaseSO<UnifiedCharacterTypeSO, UnifiedCharacter>.CharacterDisplayName CharacterTemplateBaseSO<UnifiedCharacterTypeSO, UnifiedCharacter>.GetOrCreateCharacter() CharacterTemplateBaseSO<UnifiedCharacterTypeSO, UnifiedCharacter>.CreateNewCharacter() Properties CharacterSpritesheet public AssetReferenceT<Texture2D> CharacterSpritesheet { get; } Property Value AssetReferenceT<Texture2D> Methods CreateNewCharacter() protected override UnifiedCharacter CreateNewCharacter() Returns UnifiedCharacter"
  },
  "api/BlazerTech.CharacterManagement.Characters.UnifiedCharacterTypeSO.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.UnifiedCharacterTypeSO.html",
    "title": "Class UnifiedCharacterTypeSO | BlazerTech Character Management System",
    "summary": "Class UnifiedCharacterTypeSO Namespace BlazerTech.CharacterManagement.Characters Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"BlazerTech Character Management System/Unified Character Type\", fileName = \"New Unified Character Type\")] public class UnifiedCharacterTypeSO : CharacterTypeBaseSO Inheritance object Object ScriptableObject CharacterTypeBaseSO UnifiedCharacterTypeSO Inherited Members CharacterTypeBaseSO.CharacterTypeID CharacterTypeBaseSO.BaseSpritesheet CharacterTypeBaseSO.CharacterController CharacterTypeBaseSO.IsValidCharacterSpriteSheet(Sprite)"
  },
  "api/BlazerTech.CharacterManagement.Characters.html": {
    "href": "api/BlazerTech.CharacterManagement.Characters.html",
    "title": "Namespace BlazerTech.CharacterManagement.Characters | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.Characters Classes CharacterBase<TCharacterType, TCharacterHandler> CharacterDraft Wrapper class used when editting characters in the Character Creation Menu CharacterDraft_NewCharacter Wrapper for a newely created character within the Character Creation Menu. Added to a group when saved. CharacterDraft_PreExistingCharacter Wrapper for a pre created character when being edited in the Character Creation Menu. A copy of the character is provided and edited in the menu. Changes to the copy will be applied to the original when saved. CharacterGroupBase CharacterGroupRegistry Holds a collection of three different types of groups. An instance of this class is used for each Layered Character Type. CharacterLayerSO CharacterPieceDefinition CharacterPieceDefinition.CharacterPieceDefinition_DTO Data Transfer Object (DTO) used to save and load a CharacterPieceDefinition. CharacterPieceDefinition.LoadedSpriteDataContainer CharacterPieceMapping References a CharacterPieceDefinition within a CharacterLayerSO by spritesheet name. CharacterTemplateBaseSO<TCharacterType, TCharacter> Base class for all Character Templates. CharacterTypeBaseSO bass Scriptable Object for all Character Types. CharacterTypeGroups_DTO EquippedCharacterPiece A wrapper for CharacterPieceDefinition. used as a list in LayeredCharacter. FixedCharacterGroup FixedCharacterGroup.FixedCharacterGroup_DTO FlexibleCharacterGroup FlexibleCharacterGroup.FlexibleCharacterGroup_DTO GroupTemplateEntry LayeredCharacter LayeredCharacter.Character_DTO LayeredCharacter.LoadedLayeredCharacterHandler LayeredCharacterGroupManager LayeredCharacterGroupTemplateSO A blueprint for a Layered Character Group (Fixed or Flexible) that will automatically be created at runtime. LayeredCharacterTemplateSO LayeredCharacterTypeSO LayeredCharacterTypeSO.CharacterCreatorConfig LoadedCharacterHandlerBase SingleCharacterGroup SingleCharacterGroup.SingleCharacterGroup_DTO UnifiedCharacter UnifiedCharacter.LoadedUnifiedCharacterHandler UnifiedCharacterTemplateSO UnifiedCharacterTypeSO Enums CharacterDraftType CharacterGroupAutoSaveTriggers CharacterGroupEntryType CharacterGroupType MultiCharacterGroupType"
  },
  "api/BlazerTech.CharacterManagement.Components.CharacterAnimator.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.CharacterAnimator.html",
    "title": "Class CharacterAnimator | BlazerTech Character Management System",
    "summary": "Class CharacterAnimator Namespace BlazerTech.CharacterManagement.Components Assembly Assembly-CSharp.dll public class CharacterAnimator : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CharacterAnimator Fields Instance public static CharacterAnimator Instance Field Value CharacterAnimator Properties Animator public Animator Animator { get; } Property Value Animator Methods ForceDirection(Direction) public void ForceDirection(Direction newDirection) Parameters newDirection Direction GetCurrentAnimationNormalizedTime() public float GetCurrentAnimationNormalizedTime() Returns float GetParamaterInfo(string) public float GetParamaterInfo(string name) Parameters name string Returns float PlayAnimation(string) public void PlayAnimation(string name) Parameters name string RestartCurrentAnimation() public void RestartCurrentAnimation() SetTrigger(string) public void SetTrigger(string name) Parameters name string"
  },
  "api/BlazerTech.CharacterManagement.Components.CharacterLoaderBase.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.CharacterLoaderBase.html",
    "title": "Class CharacterLoaderBase | BlazerTech Character Management System",
    "summary": "Class CharacterLoaderBase Namespace BlazerTech.CharacterManagement.Components Assembly Assembly-CSharp.dll [DisallowMultipleComponent] public abstract class CharacterLoaderBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CharacterLoaderBase Derived LayeredCharacterLoader LayeredCharacterTemplateLoader UnifiedCharacterLoader Fields _animator The Animator to apply the Animator Controller to [SerializeField] [ShowIf(\"setAnimatorController\")] [BoxGroup(\"References\")] protected Animator _animator Field Value Animator _renderer The Renderer to apply the character shader to. [SerializeField] [BoxGroup(\"References\")] protected Renderer _renderer Field Value Renderer loadCharacterOnStart Toggles if the character should be loaded when the Start method is called. [SerializeField] [BoxGroup(\"Loading\")] protected bool loadCharacterOnStart Field Value bool loadingMode Option to load character asynchronously or synchronously. [SerializeField] [BoxGroup(\"Loading\")] protected CharacterLoaderLoadingMode loadingMode Field Value CharacterLoaderLoadingMode setAnimatorController Toggles if the Animator Controller set in Character Type should be used. [Tooltip(\"Override the animator controller with the one assigned in the Character Type\")] [SerializeField] [BoxGroup(\"References\")] protected bool setAnimatorController Field Value bool Methods GetAndShowCharacter() public abstract Task GetAndShowCharacter() Returns Task OnDestroy() protected virtual void OnDestroy() ReleaseCharacter() protected abstract void ReleaseCharacter() ShowCharacter() protected abstract void ShowCharacter() TrySetCharacterAnimator(CharacterTypeBaseSO) protected void TrySetCharacterAnimator(CharacterTypeBaseSO characterType) Parameters characterType CharacterTypeBaseSO ValidationCheck() protected virtual bool ValidationCheck() Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Components.CharacterLoaderLoadingMode.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.CharacterLoaderLoadingMode.html",
    "title": "Enum CharacterLoaderLoadingMode | BlazerTech Character Management System",
    "summary": "Enum CharacterLoaderLoadingMode Namespace BlazerTech.CharacterManagement.Components Assembly Assembly-CSharp.dll public enum CharacterLoaderLoadingMode Fields Asynchronous = 0 Synchronous = 1"
  },
  "api/BlazerTech.CharacterManagement.Components.CharacterMultiGroupLoadMethod.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.CharacterMultiGroupLoadMethod.html",
    "title": "Enum CharacterMultiGroupLoadMethod | BlazerTech Character Management System",
    "summary": "Enum CharacterMultiGroupLoadMethod Namespace BlazerTech.CharacterManagement.Components Assembly Assembly-CSharp.dll public enum CharacterMultiGroupLoadMethod Fields CharacterIndex = 1 CharacterName = 0 Randomized = 2"
  },
  "api/BlazerTech.CharacterManagement.Components.LayeredCharacterLoader.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.LayeredCharacterLoader.html",
    "title": "Class LayeredCharacterLoader | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterLoader Namespace BlazerTech.CharacterManagement.Components Assembly Assembly-CSharp.dll public class LayeredCharacterLoader : CharacterLoaderBase Inheritance object Object Component Behaviour MonoBehaviour CharacterLoaderBase LayeredCharacterLoader Inherited Members CharacterLoaderBase._renderer CharacterLoaderBase.setAnimatorController CharacterLoaderBase._animator CharacterLoaderBase.loadingMode CharacterLoaderBase.loadCharacterOnStart CharacterLoaderBase.TrySetCharacterAnimator(CharacterTypeBaseSO) Properties CharacterGroupName public string CharacterGroupName { get; } Property Value string CharacterIndex public int CharacterIndex { get; } Property Value int CharacterLoadMethod public CharacterMultiGroupLoadMethod CharacterLoadMethod { get; } Property Value CharacterMultiGroupLoadMethod CharacterName public string CharacterName { get; } Property Value string Methods GetAndShowCharacter() public override Task GetAndShowCharacter() Returns Task OnDestroy() protected override void OnDestroy() ReleaseCharacter() protected override void ReleaseCharacter() ShowCharacter() protected override void ShowCharacter() UpdateCharacterMaterialProperties() public void UpdateCharacterMaterialProperties() ValidationCheck() protected override bool ValidationCheck() Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Components.LayeredCharacterTemplateLoader.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.LayeredCharacterTemplateLoader.html",
    "title": "Class LayeredCharacterTemplateLoader | BlazerTech Character Management System",
    "summary": "Class LayeredCharacterTemplateLoader Namespace BlazerTech.CharacterManagement.Components Assembly Assembly-CSharp.dll public class LayeredCharacterTemplateLoader : CharacterLoaderBase Inheritance object Object Component Behaviour MonoBehaviour CharacterLoaderBase LayeredCharacterTemplateLoader Inherited Members CharacterLoaderBase._renderer CharacterLoaderBase.setAnimatorController CharacterLoaderBase._animator CharacterLoaderBase.loadingMode CharacterLoaderBase.loadCharacterOnStart CharacterLoaderBase.ValidationCheck() CharacterLoaderBase.TrySetCharacterAnimator(CharacterTypeBaseSO) CharacterLoaderBase.OnDestroy() Methods GetAndShowCharacter() public override Task GetAndShowCharacter() Returns Task ReleaseCharacter() protected override void ReleaseCharacter() ShowCharacter() protected override void ShowCharacter()"
  },
  "api/BlazerTech.CharacterManagement.Components.PlayerMovementController.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.PlayerMovementController.html",
    "title": "Class PlayerMovementController | BlazerTech Character Management System",
    "summary": "Class PlayerMovementController Namespace BlazerTech.CharacterManagement.Components Assembly Assembly-CSharp.dll public class PlayerMovementController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerMovementController Fields Instance public static PlayerMovementController Instance Field Value PlayerMovementController Properties CanMove public bool CanMove { get; set; } Property Value bool EnableCrouch public bool EnableCrouch { get; } Property Value bool EnableSprint public bool EnableSprint { get; } Property Value bool IsCrouching public bool IsCrouching { get; } Property Value bool IsMoving public bool IsMoving { get; } Property Value bool IsSprinting public bool IsSprinting { get; } Property Value bool MoveSpeed public float MoveSpeed { get; set; } Property Value float Movement public Vector2 Movement { get; } Property Value Vector2"
  },
  "api/BlazerTech.CharacterManagement.Components.UnifiedCharacterLoader.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.UnifiedCharacterLoader.html",
    "title": "Class UnifiedCharacterLoader | BlazerTech Character Management System",
    "summary": "Class UnifiedCharacterLoader Namespace BlazerTech.CharacterManagement.Components Assembly Assembly-CSharp.dll public class UnifiedCharacterLoader : CharacterLoaderBase Inheritance object Object Component Behaviour MonoBehaviour CharacterLoaderBase UnifiedCharacterLoader Inherited Members CharacterLoaderBase._renderer CharacterLoaderBase.setAnimatorController CharacterLoaderBase._animator CharacterLoaderBase.loadingMode CharacterLoaderBase.loadCharacterOnStart CharacterLoaderBase.ValidationCheck() CharacterLoaderBase.TrySetCharacterAnimator(CharacterTypeBaseSO) CharacterLoaderBase.OnDestroy() Methods GetAndShowCharacter() public override Task GetAndShowCharacter() Returns Task ReleaseCharacter() protected override void ReleaseCharacter() ShowCharacter() protected override void ShowCharacter()"
  },
  "api/BlazerTech.CharacterManagement.Components.html": {
    "href": "api/BlazerTech.CharacterManagement.Components.html",
    "title": "Namespace BlazerTech.CharacterManagement.Components | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.Components Classes CharacterAnimator CharacterLoaderBase LayeredCharacterLoader LayeredCharacterTemplateLoader PlayerMovementController UnifiedCharacterLoader Enums CharacterLoaderLoadingMode CharacterMultiGroupLoadMethod"
  },
  "api/BlazerTech.CharacterManagement.Editor.Inspectors.CharacterTypeSOEditor.html": {
    "href": "api/BlazerTech.CharacterManagement.Editor.Inspectors.CharacterTypeSOEditor.html",
    "title": "Class CharacterTypeSOEditor | BlazerTech Character Management System",
    "summary": "Class CharacterTypeSOEditor Namespace BlazerTech.CharacterManagement.Editor.Inspectors Assembly Assembly-CSharp-Editor.dll [CustomEditor(typeof(LayeredCharacterTypeSO), true)] public class CharacterTypeSOEditor : NaughtyInspector Inheritance object Object ScriptableObject Editor NaughtyInspector CharacterTypeSOEditor Inherited Members NaughtyInspector.OnEnable() NaughtyInspector.OnDisable() NaughtyInspector.GetSerializedProperties(ref List<SerializedProperty>) NaughtyInspector.DrawSerializedProperties() NaughtyInspector.DrawNonSerializedFields(bool) NaughtyInspector.DrawNativeProperties(bool) NaughtyInspector.DrawButtons(bool) Methods OnInspectorGUI() Implement this function to make a custom inspector. public override void OnInspectorGUI()"
  },
  "api/BlazerTech.CharacterManagement.Editor.Inspectors.html": {
    "href": "api/BlazerTech.CharacterManagement.Editor.Inspectors.html",
    "title": "Namespace BlazerTech.CharacterManagement.Editor.Inspectors | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.Editor.Inspectors Classes CharacterTypeSOEditor"
  },
  "api/BlazerTech.CharacterManagement.Editor.Windows.CharacterTypeGroupCollectionsViewer.html": {
    "href": "api/BlazerTech.CharacterManagement.Editor.Windows.CharacterTypeGroupCollectionsViewer.html",
    "title": "Class CharacterTypeGroupCollectionsViewer | BlazerTech Character Management System",
    "summary": "Class CharacterTypeGroupCollectionsViewer Namespace BlazerTech.CharacterManagement.Editor.Windows Assembly Assembly-CSharp-Editor.dll public class CharacterTypeGroupCollectionsViewer : EditorWindow Inheritance object Object ScriptableObject EditorWindow CharacterTypeGroupCollectionsViewer Methods GetDisplayText(string) public string GetDisplayText(string input) Parameters input string Returns string ShowWindow() [MenuItem(\"Tools/Character Group Collections Viewer\")] public static void ShowWindow()"
  },
  "api/BlazerTech.CharacterManagement.Editor.Windows.html": {
    "href": "api/BlazerTech.CharacterManagement.Editor.Windows.html",
    "title": "Namespace BlazerTech.CharacterManagement.Editor.Windows | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.Editor.Windows Classes CharacterTypeGroupCollectionsViewer"
  },
  "api/BlazerTech.CharacterManagement.Essentials.CCMAnimationPreviewButtonHandler.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.CCMAnimationPreviewButtonHandler.html",
    "title": "Class CCMAnimationPreviewButtonHandler | BlazerTech Character Management System",
    "summary": "Class CCMAnimationPreviewButtonHandler Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll public class CCMAnimationPreviewButtonHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCMAnimationPreviewButtonHandler"
  },
  "api/BlazerTech.CharacterManagement.Essentials.CCReferenceHandler.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.CCReferenceHandler.html",
    "title": "Class CCReferenceHandler | BlazerTech Character Management System",
    "summary": "Class CCReferenceHandler Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll [DefaultExecutionOrder(-200)] [DisallowMultipleComponent] public class CCReferenceHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCReferenceHandler Properties CharacterPiecesShaders public SerializableDictionary<int, Shader> CharacterPiecesShaders { get; } Property Value SerializableDictionary<int, Shader> CharacterTypes public LayeredCharacterTypeSO[] CharacterTypes { get; } Property Value LayeredCharacterTypeSO[] Instance public static CCReferenceHandler Instance { get; } Property Value CCReferenceHandler UnifiedCharacterMaterial public Material UnifiedCharacterMaterial { get; } Property Value Material Methods GetCharacterTypeFromIdentifier(string) public LayeredCharacterTypeSO GetCharacterTypeFromIdentifier(string identifier) Parameters identifier string Returns LayeredCharacterTypeSO GetCharacterTypesAsync() public Task<List<LayeredCharacterTypeSO>> GetCharacterTypesAsync() Returns Task<List<LayeredCharacterTypeSO>> GetLayeredCharacterGroupTemplates() public List<LayeredCharacterGroupTemplateSO> GetLayeredCharacterGroupTemplates() Returns List<LayeredCharacterGroupTemplateSO> GetLayeredCharacterTypes() public List<LayeredCharacterTypeSO> GetLayeredCharacterTypes() Returns List<LayeredCharacterTypeSO> SetCharacterTypes(LayeredCharacterTypeSO[]) public void SetCharacterTypes(LayeredCharacterTypeSO[] characterTypes) Parameters characterTypes LayeredCharacterTypeSO[]"
  },
  "api/BlazerTech.CharacterManagement.Essentials.CCSaveSystem.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.CCSaveSystem.html",
    "title": "Class CCSaveSystem | BlazerTech Character Management System",
    "summary": "Class CCSaveSystem Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll public class CCSaveSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCSaveSystem Methods LoadFileWholePath<T>(string) public static T LoadFileWholePath<T>(string filePath) where T : class Parameters filePath string Returns T Type Parameters T LoadFile<T>(string) public static T LoadFile<T>(string filePath) where T : class Parameters filePath string Returns T Type Parameters T LoadFilesInFolder<T>(string) public static List<T> LoadFilesInFolder<T>(string folderPath) where T : class Parameters folderPath string Returns List<T> Type Parameters T SaveFile<T>(string, string, T) public static void SaveFile<T>(string filePath, string fileName, T objectToWrite) Parameters filePath string fileName string objectToWrite T Type Parameters T"
  },
  "api/BlazerTech.CharacterManagement.Essentials.CMSInitializationHandler.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.CMSInitializationHandler.html",
    "title": "Class CMSInitializationHandler | BlazerTech Character Management System",
    "summary": "Class CMSInitializationHandler Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll [DefaultExecutionOrder(-100)] [DisallowMultipleComponent] public class CMSInitializationHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CMSInitializationHandler Properties AllInitializationFinished public static bool AllInitializationFinished { get; } Property Value bool CoreInitializationFinished public static bool CoreInitializationFinished { get; } Property Value bool Instance public static CMSInitializationHandler Instance { get; } Property Value CMSInitializationHandler"
  },
  "api/BlazerTech.CharacterManagement.Essentials.Direction.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.Direction.html",
    "title": "Enum Direction | BlazerTech Character Management System",
    "summary": "Enum Direction Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll public enum Direction Fields Down = 0 Left = 2 Right = 3 Up = 1"
  },
  "api/BlazerTech.CharacterManagement.Essentials.EssentialsLoader.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.EssentialsLoader.html",
    "title": "Class EssentialsLoader | BlazerTech Character Management System",
    "summary": "Class EssentialsLoader Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll public abstract class EssentialsLoader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EssentialsLoader Methods Execute() [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)] public static void Execute()"
  },
  "api/BlazerTech.CharacterManagement.Essentials.IValidatable.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.IValidatable.html",
    "title": "Interface IValidatable | BlazerTech Character Management System",
    "summary": "Interface IValidatable Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll public interface IValidatable Methods IsValid() bool IsValid() Returns bool"
  },
  "api/BlazerTech.CharacterManagement.Essentials.OwnedResourceTracker-1.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.OwnedResourceTracker-1.html",
    "title": "Class OwnedResourceTracker<TResource> | BlazerTech Character Management System",
    "summary": "Class OwnedResourceTracker<TResource> Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll public abstract class OwnedResourceTracker<TResource> Type Parameters TResource Inheritance object OwnedResourceTracker<TResource> Derived CharacterPieceDefinition Properties Owners public HashSet<object> Owners { get; protected set; } Property Value HashSet<object> Methods AcquireResource(object) Acquires the resource for an owner public virtual TResource AcquireResource(object owner) Parameters owner object Object claiming ownership Returns TResource Managed resource AcquireResourceAsync(object) Acquires the resource for an owner asynchronously public virtual Task<TResource> AcquireResourceAsync(object owner) Parameters owner object Object claiming ownership Returns Task<TResource> Managed resource GetAndLoadResource() protected abstract TResource GetAndLoadResource() Returns TResource GetAndLoadResourceAsync() protected abstract Task<TResource> GetAndLoadResourceAsync() Returns Task<TResource> ReleaseResource(object) public virtual void ReleaseResource(object owner) Parameters owner object UnloadResource() protected abstract void UnloadResource()"
  },
  "api/BlazerTech.CharacterManagement.Essentials.SerializableDictionary-2.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | BlazerTech Character Management System",
    "summary": "Class SerializableDictionary<TKey, TValue> Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll [Serializable] public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters TKey TValue Inheritance object Dictionary<TKey, TValue> SerializableDictionary<TKey, TValue> Implements IDictionary<TKey, TValue> ICollection<KeyValuePair<TKey, TValue>> IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable ISerializationCallbackReceiver Methods OnAfterDeserialize() Implement this callback to transform data back into runtime data types after an object is deserialized. public void OnAfterDeserialize() OnBeforeSerialize() Implement this callback to transform data into serializable data types immediately before an object is serialized. public void OnBeforeSerialize()"
  },
  "api/BlazerTech.CharacterManagement.Essentials.SerializableKeyValuePair-2.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.SerializableKeyValuePair-2.html",
    "title": "Class SerializableKeyValuePair<TKey, TValue> | BlazerTech Character Management System",
    "summary": "Class SerializableKeyValuePair<TKey, TValue> Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll [Serializable] public class SerializableKeyValuePair<TKey, TValue> Type Parameters TKey TValue Inheritance object SerializableKeyValuePair<TKey, TValue> Constructors SerializableKeyValuePair(TKey, TValue) public SerializableKeyValuePair(TKey key, TValue value) Parameters key TKey value TValue Properties key public TKey key { get; set; } Property Value TKey value public TValue value { get; set; } Property Value TValue"
  },
  "api/BlazerTech.CharacterManagement.Essentials.SessionGUIDHandler.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.SessionGUIDHandler.html",
    "title": "Class SessionGUIDHandler | BlazerTech Character Management System",
    "summary": "Class SessionGUIDHandler Namespace BlazerTech.CharacterManagement.Essentials Assembly Assembly-CSharp.dll [DefaultExecutionOrder(-1000)] public class SessionGUIDHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SessionGUIDHandler Fields SessionGUID public static Guid SessionGUID Field Value Guid"
  },
  "api/BlazerTech.CharacterManagement.Essentials.html": {
    "href": "api/BlazerTech.CharacterManagement.Essentials.html",
    "title": "Namespace BlazerTech.CharacterManagement.Essentials | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.Essentials Classes CCMAnimationPreviewButtonHandler CCReferenceHandler CCSaveSystem CMSInitializationHandler EssentialsLoader OwnedResourceTracker<TResource> SerializableDictionary<TKey, TValue> SerializableKeyValuePair<TKey, TValue> SessionGUIDHandler Interfaces IValidatable Enums Direction"
  },
  "api/BlazerTech.CharacterManagement.Internal.Testing.CCDebugChangeSceneOnEscape.html": {
    "href": "api/BlazerTech.CharacterManagement.Internal.Testing.CCDebugChangeSceneOnEscape.html",
    "title": "Class CCDebugChangeSceneOnEscape | BlazerTech Character Management System",
    "summary": "Class CCDebugChangeSceneOnEscape Namespace BlazerTech.CharacterManagement.Internal.Testing Assembly Assembly-CSharp.dll public class CCDebugChangeSceneOnEscape : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCDebugChangeSceneOnEscape Fields SceneName public string SceneName Field Value string"
  },
  "api/BlazerTech.CharacterManagement.Internal.Testing.CCDebugCreateFixedCharacterGroup.html": {
    "href": "api/BlazerTech.CharacterManagement.Internal.Testing.CCDebugCreateFixedCharacterGroup.html",
    "title": "Class CCDebugCreateFixedCharacterGroup | BlazerTech Character Management System",
    "summary": "Class CCDebugCreateFixedCharacterGroup Namespace BlazerTech.CharacterManagement.Internal.Testing Assembly Assembly-CSharp.dll public class CCDebugCreateFixedCharacterGroup : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCDebugCreateFixedCharacterGroup Methods CreateFixedCharacterGroup() [Button(null, EButtonEnableMode.Always)] public void CreateFixedCharacterGroup()"
  },
  "api/BlazerTech.CharacterManagement.Internal.Testing.CCDebugCreateFlexibleCharacter.html": {
    "href": "api/BlazerTech.CharacterManagement.Internal.Testing.CCDebugCreateFlexibleCharacter.html",
    "title": "Class CCDebugCreateFlexibleCharacter | BlazerTech Character Management System",
    "summary": "Class CCDebugCreateFlexibleCharacter Namespace BlazerTech.CharacterManagement.Internal.Testing Assembly Assembly-CSharp.dll public class CCDebugCreateFlexibleCharacter : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCDebugCreateFlexibleCharacter Methods CreateFlexibleCharacter() [Button(null, EButtonEnableMode.Always)] public void CreateFlexibleCharacter()"
  },
  "api/BlazerTech.CharacterManagement.Internal.Testing.CCDebugCreateSingleCharacter.html": {
    "href": "api/BlazerTech.CharacterManagement.Internal.Testing.CCDebugCreateSingleCharacter.html",
    "title": "Class CCDebugCreateSingleCharacter | BlazerTech Character Management System",
    "summary": "Class CCDebugCreateSingleCharacter Namespace BlazerTech.CharacterManagement.Internal.Testing Assembly Assembly-CSharp.dll public class CCDebugCreateSingleCharacter : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CCDebugCreateSingleCharacter"
  },
  "api/BlazerTech.CharacterManagement.Internal.Testing.LoadingScreenObjectRotation.html": {
    "href": "api/BlazerTech.CharacterManagement.Internal.Testing.LoadingScreenObjectRotation.html",
    "title": "Class LoadingScreenObjectRotation | BlazerTech Character Management System",
    "summary": "Class LoadingScreenObjectRotation Namespace BlazerTech.CharacterManagement.Internal.Testing Assembly Assembly-CSharp.dll public class LoadingScreenObjectRotation : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LoadingScreenObjectRotation"
  },
  "api/BlazerTech.CharacterManagement.Internal.Testing.html": {
    "href": "api/BlazerTech.CharacterManagement.Internal.Testing.html",
    "title": "Namespace BlazerTech.CharacterManagement.Internal.Testing | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.Internal.Testing Classes CCDebugChangeSceneOnEscape CCDebugCreateFixedCharacterGroup CCDebugCreateFlexibleCharacter CCDebugCreateSingleCharacter LoadingScreenObjectRotation"
  },
  "api/BlazerTech.CharacterManagement.Samples.ActiveMenuHandler.html": {
    "href": "api/BlazerTech.CharacterManagement.Samples.ActiveMenuHandler.html",
    "title": "Class ActiveMenuHandler | BlazerTech Character Management System",
    "summary": "Class ActiveMenuHandler Namespace BlazerTech.CharacterManagement.Samples Assembly Assembly-CSharp.dll [DefaultExecutionOrder(-10)] public class ActiveMenuHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ActiveMenuHandler Fields CloseMenuKey [ShowIf(\"CloseMenuWithInput\")] public KeyCode CloseMenuKey Field Value KeyCode CloseMenuWithInput [Space] public bool CloseMenuWithInput Field Value bool Instance public static ActiveMenuHandler Instance Field Value ActiveMenuHandler menuStack public readonly Stack<GameObject> menuStack Field Value Stack<GameObject> Methods Back() public void Back() OpenMenu(GameObject) public void OpenMenu(GameObject menu) Parameters menu GameObject Events OnAllMenusClosed public event EventHandler OnAllMenusClosed Event Type EventHandler"
  },
  "api/BlazerTech.CharacterManagement.Samples.Menu.html": {
    "href": "api/BlazerTech.CharacterManagement.Samples.Menu.html",
    "title": "Class Menu | BlazerTech Character Management System",
    "summary": "Class Menu Namespace BlazerTech.CharacterManagement.Samples Assembly Assembly-CSharp.dll public class Menu : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Menu Methods Back() public void Back()"
  },
  "api/BlazerTech.CharacterManagement.Samples.MenuBackRelay.html": {
    "href": "api/BlazerTech.CharacterManagement.Samples.MenuBackRelay.html",
    "title": "Class MenuBackRelay | BlazerTech Character Management System",
    "summary": "Class MenuBackRelay Namespace BlazerTech.CharacterManagement.Samples Assembly Assembly-CSharp.dll public class MenuBackRelay : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MenuBackRelay Methods Back() public void Back()"
  },
  "api/BlazerTech.CharacterManagement.Samples.SceneChangeRelay.html": {
    "href": "api/BlazerTech.CharacterManagement.Samples.SceneChangeRelay.html",
    "title": "Class SceneChangeRelay | BlazerTech Character Management System",
    "summary": "Class SceneChangeRelay Namespace BlazerTech.CharacterManagement.Samples Assembly Assembly-CSharp.dll public class SceneChangeRelay : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SceneChangeRelay Methods ChangeScene(int) public void ChangeScene(int sceneIndex) Parameters sceneIndex int ChangeScene(string) public void ChangeScene(string sceneName) Parameters sceneName string"
  },
  "api/BlazerTech.CharacterManagement.Samples.ToggleMenuOnInput.html": {
    "href": "api/BlazerTech.CharacterManagement.Samples.ToggleMenuOnInput.html",
    "title": "Class ToggleMenuOnInput | BlazerTech Character Management System",
    "summary": "Class ToggleMenuOnInput Namespace BlazerTech.CharacterManagement.Samples Assembly Assembly-CSharp.dll public class ToggleMenuOnInput : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ToggleMenuOnInput"
  },
  "api/BlazerTech.CharacterManagement.Samples.html": {
    "href": "api/BlazerTech.CharacterManagement.Samples.html",
    "title": "Namespace BlazerTech.CharacterManagement.Samples | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.Samples Classes ActiveMenuHandler Menu MenuBackRelay SceneChangeRelay ToggleMenuOnInput"
  },
  "api/BlazerTech.CharacterManagement.Utilities.SerializableInterface-1.html": {
    "href": "api/BlazerTech.CharacterManagement.Utilities.SerializableInterface-1.html",
    "title": "Class SerializableInterface<T> | BlazerTech Character Management System",
    "summary": "Class SerializableInterface<T> Namespace BlazerTech.CharacterManagement.Utilities Assembly Assembly-CSharp.dll [Serializable] public class SerializableInterface<T> where T : class Type Parameters T Inheritance object SerializableInterface<T> Properties Interface public T Interface { get; } Property Value T"
  },
  "api/BlazerTech.CharacterManagement.Utilities.SerializableInterfaceDrawer.html": {
    "href": "api/BlazerTech.CharacterManagement.Utilities.SerializableInterfaceDrawer.html",
    "title": "Class SerializableInterfaceDrawer | BlazerTech Character Management System",
    "summary": "Class SerializableInterfaceDrawer Namespace BlazerTech.CharacterManagement.Utilities Assembly Assembly-CSharp-Editor.dll [CustomPropertyDrawer(typeof(SerializableInterface<>), true)] public class SerializableInterfaceDrawer : PropertyDrawer Inheritance object GUIDrawer PropertyDrawer SerializableInterfaceDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Override this method to make your own IMGUI based GUI for the property. public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters position Rect Rectangle on the screen to use for the property GUI. property SerializedProperty The SerializedProperty to make the custom GUI for. label GUIContent The label of this property."
  },
  "api/BlazerTech.CharacterManagement.Utilities.html": {
    "href": "api/BlazerTech.CharacterManagement.Utilities.html",
    "title": "Namespace BlazerTech.CharacterManagement.Utilities | BlazerTech Character Management System",
    "summary": "Namespace BlazerTech.CharacterManagement.Utilities Classes SerializableInterfaceDrawer SerializableInterface<T>"
  },
  "docs/advanced/creating-characters.html": {
    "href": "docs/advanced/creating-characters.html",
    "title": "| BlazerTech Character Management System",
    "summary": ""
  },
  "docs/character-creator.html": {
    "href": "docs/character-creator.html",
    "title": "Character Creator | BlazerTech Character Management System",
    "summary": "Character Creator"
  },
  "docs/character-groups.html": {
    "href": "docs/character-groups.html",
    "title": "Character Groups | BlazerTech Character Management System",
    "summary": "Character Groups Character Group Definitions Character Groups make it easy to categorize and use characters in a variety of situations. They are optional in most cases but can be very handy. Every Layered Character Type contains three group types. Type Description Use Case Single Contains one character. Only one Single Group can exist per Character Type. simple situations where only one character is used such as a player character. Flexible A list of any amount of characters. Characters can be added, removed or edited at any time. Situations where a dynamic and editable list is needed. Such as a collection of playable characters the player can create and choose from. Fixed A list of a pre-determined amount of characters. The number is set when the list is created and all characters are created immedietely. Characters within the list can be edited at anytime but cannot be removed and new characters cannot be added. Situations where an immutable list is needewd. Such as a set list of playable characters the player can choose from. Character Group Registry The CharacterGroupRegistry class contains all three groups types. It contains one Single Group and a list of Flexible and Fixed Groups. The LayeredCharacterGroupManager class contains a dictionary of CharacterTypeGroupsRegistry. One entry for each Layered Character Type used. Single Group A group which contains only one character. This group is always present in every Character Group Registry. This group mainly exists to make creating simple scenarioes easily. For example if you have a Character Creation Menu setup you can call the EnableMenuSingleGroup to automically enable the menu and save the created character to the Single Group of the Character Type used. Then later that character can be used by using the Layered Character Loader, giving it the same character type and telling it to load the Single Group. Flexible Group A dynamic list where characters can be added to, removed from, or edited at anytime. Fixed Group An immutable list of characters. The size is defined when creating the list and all characters are created immedietely upon group creation. Characters within the group can be modified or even swapped out but the size of the list cannot change. Adding a Layered Character to a Group"
  },
  "docs/character-layers.html": {
    "href": "docs/character-layers.html",
    "title": "Character Layers | BlazerTech Character Management System",
    "summary": "Character Layers A Character Layer is a Scriptable Object that contains all available character spritesheets for that specific layer. What's a Character Piece Definition? A Character Piece Definition is a wrapper for a spritesheet which allows for easy loading/unloading of the sprite when needed. Properties Attached Character Type The Layered Character Type the layer is meant to be used for. Layer Name The name of the layer. Used in the Character Creator when displaying character layers. Character Piece Asset Label The Addressables label used to load sprites into Character Piece Definitions. BT-CMS uses Unity's Addressables package to dynamically load/unload sprites when needed. Select the label you'd like to use and make sure all character spritesheets meant to be used for this layer are marked as Addressable and have the same label. Include None Option Decides if a blank option should be added to the list of available Character Pieces. This will essentially allow a character to be created without using that layer. Warning The Character Pieces list must be refreshed whenever Include None Option is changed! Buttons Get Character Pieces Finds all sprites matching the Character Piece Asset Label and are the same size as the Base Spritesheet in the Layered Character Type, creates a CharacterPieceDefinition for each one and adds it to the Character Pieces list. Clear Character Pieces Clears the Character Pieces list Caution This cannot be undone!"
  },
  "docs/character-templates.html": {
    "href": "docs/character-templates.html",
    "title": "Character Templates | BlazerTech Character Management System",
    "summary": "Character Templates A Character Template is a blueprint for creating characters from a defined Character Type. They provide an easy way to use characters anywhere in your project. Shared Fields Fields required by all Character Templates. Field Type Description Character Type UnifiedCharacterTypeSO / LayeredCharacterTypeSO Reference to the Character Type this template is based on. \uD83D\uDD17 API Character Name String Name for characters created from this template (does not need to be unique). \uD83D\uDD17 API Character Display Name String Optional display name shown for characters created from this template. \uD83D\uDD17 API Unified Character Template Setup A blueprint used to create a Unified Character at runtime. Can be used in the Unified Character Loader component. Tip To create a Unified Character Template: Right-click in the Project window → Create > BlazerTech Character Management System > Unified Character Type Fields Field Type Description Character Spritesheet AssetReferenceT<Texture2D> Reference to a spritesheet the same size as the Base Spritesheet in the Character Type. When referenced, the spritesheet is marked as Addressable, allowing it to be loaded/unloaded as needed. \uD83D\uDD17 API Layered Character Template Setup A blueprint used to create a Layered Character at runtime. Can be used in the Layered Character Template Loader component. Tip To create a Layered Character Template: Right-click in the Project window → Create > BlazerTech Character Management System > Layered Character Type Once the Character Type reference is set, a list of all layers from the referenced type will appear. Each layer includes: Dropdown – Select which piece to use for the layer. Search bar – Narrow results if the list is large. Buttons Resync List – Rebuilds the layers list and resets all values. Validate Character Template – Logs whether the template is valid (true/false)."
  },
  "docs/character-type-fields.html": {
    "href": "docs/character-type-fields.html",
    "title": "Character Type Fields | BlazerTech Character Management System",
    "summary": "Character Type Fields The following are fields that are shared across all Character Type Scriptable Objects. Don’t know what a Character Type is? \uD83D\uDD17 Read More → Character Types CharacterTypeID Field Type Description CharacterTypeID String A unique identifier for this Character Type. Must be unique across all types. Warning A Character Type with the same ID as another will fail to initialize and all characters of that type will also fail to load. \uD83D\uDD17 API BaseSpritesheet Field Type Description BaseSpritesheet Spritesheet The base reference spritesheet used for all characters of this type. Every character spritesheet must match its dimensions exactly. Warning Character Spritesheets of a different size will be rejected, and a warning will be logged. Setup Requirements Sprite Mode must be set to Multiple so the sheet can be sliced into individual frames. All animations and shaders reference the Base Spritesheet. When the character is loaded a shader will display the correct character over the Base Spritesheet. \uD83D\uDD17 API CharacterController Property Type Description CharacterController RuntimeAnimatorController An Animator Controller that animates all characters of this Character Type. Note This field is optional. Because all characters of a type use the Base Spritesheet (see BaseSpritesheet), a single Animator Controller can be reused as long as its animations reference frames from the Base Spritesheet. Tip When using a Character Loader component, this Animator Controller will be applied automatically if Set Animator Controller is enabled. See \uD83D\uDD17 Character Usage for more info. \uD83D\uDD17 API"
  },
  "docs/character-types.html": {
    "href": "docs/character-types.html",
    "title": "Character Types | BlazerTech Character Management System",
    "summary": "Character Types Character types are Scriptable Objects that define core aspects of a character. They are the heart of the Character Management System. Note All characters Require a Character Type. Character Type Base All Character Types inherit from CharacterTypeBaseSO, which contains the core properties shared across all Character Types. Core Character Type Properties The following properties are shared across all character types. Property Type Description CharacterTypeID String A unique identifer BaseSpritesheet Sprite The default character spritesheet CharacterController RuntimeAnimatorController The Animator Controller used \uD83D\uDD17 Read More → Character Type Properties Character Type Variants Variant Modularity Runtime Customization Best For Unified Single spritesheet None Pre-created, fixed characters Layered Layered spritesheets High Modular, editable characters 1. Unified Character Type Each character uses a single spritesheet containing the fully assembled character. No runtime customization is possible. Use Case: Characters with fixed, pre-created appearances. Example: Simplistic characters where their appearance is pre-determined and won't need to be changed. \uD83D\uDD17 Read More → Unified Character Type 2. Layered Character Type A set of separate spritesheets, each containing one visual layer of the character. Use Case: Customizable player characters or dynamically generated NPCs. Example: Body, Outfit, Hairstyle, Accessory. \uD83D\uDD17 Read More → Layered Character Type"
  },
  "docs/character-usage.html": {
    "href": "docs/character-usage.html",
    "title": "Character Usage | BlazerTech Character Management System",
    "summary": "Character Usage The following scripts can be used to load and use characters Layered Character Loader - Load pre-existing Layered Characters. Layered Character Template Loader - Create/load a layered character from a template. Unified Character Loader - Load a Unified Character from a template. The Character Shader A shader is used to display characters. Sprites from the Base Spritesheet are rendered in a component such as a Sprite Renderer If a Unified Character is used, the shader takes the single spritesheet of the character and shows that over the Base Spritesheet. If a Layered Character is used, the shader combines all layers into the final rendered character. Note If a Character Loader is used the shader will be set automatically. Character Loaders Character loading scripts can be used to load any character you've created regardless of the type. All Character Loaders have these fields: References: Field Type Description Renderer Renderer Reference to a Render component such as a Sprite Renderer. Used to apply shader. Set Animator Controller Bool Toggle if an animator controller should be applied to animate the character. Animator Animator Reference to an Animator component to apply the animator controller. Only shown if Set Animator Controller is true. Loading Settings: Field Type Description Loading Mode Enum Option to load character asynchronously or synchronously. Load Character On Start Bool Toggles if the character should be loaded when the Start method is called. Unified Character Loader Requirements: Have a Unified Character Type and at least one Unified Character Template Setup. The Unified Character Loader component can be used to create and load a character from a Unified Character Template. Add the script to a game object. Set Renderer and optionally Animator references. Set Loading Settings. Reference the Unified Character Template you want to load. Play your game and if Load Character On Start is toggled, your character will be displayed. Layered Character Loaders Layered Character Loader Requirements: Have a Layered Character Type setup and at least one Layered Character saved in a group. \uD83D\uDD17 Read More → Character Groups The Layered Character Loader component can be used to load Layered Characters from a Character Group. Add the script to a game object. Set Renderer and optionally Animator references. Set Loading Settings. Reference the Character Type you want to load a character from. Set the Character Group you want to load your character from within the Character Type. Character Groups After a Character Type has been referenced, you can choose which group you want to load a Layered Character from: Group Type Description Single Group Only one character can exist in the group. No additional parameters required. Flexible Group A group of characters that can be added, removed, or edited at any time. Fixed Group A group with a preset number of characters. New characters cannot be added or removed after creation. If Flexible Group or Fixed Group is selected, the following parameters are required: Parameter Type Description Character Group Name String A unique name used to find the fixed or flexible group. Character Load Method Enum Determines how a character is selected from the group: - Character Name → Load a character by its saved name. - Character Index → Load a character by its index position in the group. - Randomized → Randomly load a character from the group. Layered Character Template Loader Requirements: Have a Layered Character Type and at least one Layered Character Template Setup. The Layered Character Template Loader component can be used to create and load a character from a Layered Character Template. Add the script to a game object. Set Renderer and optionally Animator references. Set Loading Settings. Reference the Layered Character Template you want to load. Play your game and if Load Character On Start is toggled, your character will be displayed."
  },
  "docs/getting-started/basic-concepts.html": {
    "href": "docs/getting-started/basic-concepts.html",
    "title": "Basic Concepts | BlazerTech Character Management System",
    "summary": "Basic Concepts This page introduces the core building blocks of the Character Management System: Character Types – Define how characters are structured. Character Templates – Blueprints for creating characters later. Character Usage – Scripts to load and manage characters. Character Creator – Modular system for building customizable characters in-game. Character Types A Character Type defines how a character works. There are two kinds: Type Description Best For Unified Character Type A single spritesheet containing a fully assembled character. No runtime customization. Characters with fixed, pre-set appearances. Layered Character Type Multiple spritesheets, each containing one visual layer (body, outfit, hair, etc.). Customizable player characters, dynamic or randomized NPCs. \uD83D\uDD17 Read More → Character Types \uD83D\uDD17 Read More → Unified Character Type \uD83D\uDD17 Read More → Layered Character Type Character Templates A Character Template is a Scriptable Object that acts as a blueprint for creating characters later. Templates are supported for both Unified and Layered Characters. \uD83D\uDD17 Read More → Character Templates Character Usage Character Loader Components Once a Character Type has been created it can be loaded using one the following scripts: Loader Purpose Layered Character Loader Load pre-existing Layered Characters. Layered Character Template Loader Create/load a Layered Character from a template. Unified Character Loader Load a Unified Character from a template. Character Shader A shader is used to display characters. Sprites from a base spritesheet are rendered in a component such as a Sprite Renderer If a Unified Character is used, the shader takes the single spritesheet of the character and shows that over the Base Spritesheet. If a Layered Character is used, the shader combines all layers into the final rendered character. \uD83D\uDD17 Read More → Character Usage Character Creator The Character Creator is a fully modular creation system designed for Layered Characters. Easily build a character creation menu into your game using the included scripts and prefabs. Tip The Character Creator only works with Layered Characters. Unified Characters do not support runtime customization. Example Use Cases Customizable Player Character – Easily setup the menu for a single character such as the player character. Editing a List of Characters – Allow players to edit a predefined roster, or manage a dynamic list (create, edit, delete). Key Features Feature Description Layer Selectors Dropdowns, carousels, tabs, etc. Character Preview Static or animated, with options to rotate or swap animations. History Tracking Every change is logged and can be shown as text or image snapshots. Randomization Randomize the entire character or specific layers. Character Naming Optional name field. \uD83D\uDD17 Read More → Character Creator"
  },
  "docs/getting-started/installation-and-requirements.html": {
    "href": "docs/getting-started/installation-and-requirements.html",
    "title": "Installation and Requirements | BlazerTech Character Management System",
    "summary": "Installation and Requirements This guide covers the requirements and installation steps for the BlazerTech Character Management System (BT-CMS). Requirements Note All required packages must be installed and correctly configured before importing BT-CMS. Package Purpose Notes / Links Addressables Dynamically load/unload character spritesheets. Found in the Unity Registry via Package Manager. Naughty Attributes Adds additional attributes to the Unity Inspector. Installation Guide Unity Asset Store Link Important Addressables Settings file must be created before importing BT-CMS. To create it: Window > Asset Management > Addressables > Groups > Create Addressables Settings. Installation Steps"
  },
  "docs/getting-started/quick-start.html": {
    "href": "docs/getting-started/quick-start.html",
    "title": "| BlazerTech Character Management System",
    "summary": ""
  },
  "docs/layered-character-type.html": {
    "href": "docs/layered-character-type.html",
    "title": "Layered Character Type | BlazerTech Character Management System",
    "summary": "Layered Character Type A layered character is made from multiple layers, these layers are stacked upon each other to form the final character. Ex: Body > Outfit > Hairstyle > Accessory - Each layer is added one by one in order. Creating a Layered Character Type to create a new layered character type right click the Project window and navigate to Create > BlazerTech Character Management System > Layered Character Type. Important The Layered Character Type Scriptable Object MUST be placed inside a folder named Resources! This is need for runtime initialization. Setting up a Layered Character Type The following properties must be set: Property Type Description CharacterTypeID String A unique identifer BaseSpritesheet Sprite The default character spritesheet CharacterController RuntimeAnimatorController The Animator Controller used Setting up Character Layers At the bottom of your layered character type is a list of Character Layers. Each layer is a Scriptable Object that contains all available options for that layer of your character. To create a Character Layer once again right click the Project window and navigate to Create > BlazerTech Character Management System > Character Layer. After the Character Layer has been created make sure to add it to the layers list inside your Layered Character Type. Important Only the Layered Character Type must be placed in a Resources folder. Everything else including Character Layers should be placed outside the Resources folder! Refer to Character Layers for how to setup your newely created layers."
  },
  "docs/limezu-modern-interiors-support.html": {
    "href": "docs/limezu-modern-interiors-support.html",
    "title": "| BlazerTech Character Management System",
    "summary": ""
  },
  "docs/unified-character-type.html": {
    "href": "docs/unified-character-type.html",
    "title": "Unified Character Type | BlazerTech Character Management System",
    "summary": "Unified Character Type A Unified Character is made of one single spritesheet which contains every animation of the character. Creating a Layered Character Type to create a new layered character type right click the Project window and navigate to Create > BlazerTech Character Management System > Unified Character Type. Important The Unified Character Type Scriptable Object does NOT need to be placed inside a Resources folder unlike Layered Character Types. Setting up a Unified Character Type The following properties must be set: Property Type Description CharacterTypeID String A unique identifer BaseSpritesheet Sprite The default character spritesheet CharacterController RuntimeAnimatorController The Animator Controller used That's it! Once your Unified Character Type is all setup you can create a Unified Character Template to make characters from this Character Type. \uD83D\uDD17 Read More → Unified Character Templates"
  },
  "index.html": {
    "href": "index.html",
    "title": "BlazerTech Character Management System | BlazerTech Character Management System",
    "summary": "BlazerTech Character Management System Easily create, manage, and customize 2D characters! A comprehensive framework designed to handle both modular layered characters and simple unified characters. Providing an easy solution to create, use, animate and save/load characters in your Unity projects. Top Features! ✅ Runtime Customization - Modify characters anytime, even at runtime. ✅ Ease of Use - Characters can be easily implemented with a single component. ✅ Included Character Sets - Customizable modular characters with 4 layers (Body, Outfit, Hairstyle, Accessory). ✅ Character Creator Menu! - A customizable in-game Character Creation Menu System. ✅ Character Randomization - Layered characters can be randomly generated. Perfect for background NPCs. ✅ Modern Interiors - Full support for the modular characters contained within LimeZu's Modern Interiors Asset Pack. Get Started Check out our Getting Started Guide to begin! Warning THIS WEBSITE IS UNDER CONSTRUCTION AND NOT YET FINISHED!"
  }
}