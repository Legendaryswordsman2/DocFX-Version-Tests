### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  id: CharacterGroupBase
  parent: BlazerTech.CharacterManagement.Characters
  children:
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.#ctor(System.String,BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterType
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(System.String)
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.OnCharacterChanged
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.RaiseOnCharacterChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  langs:
  - csharp
  - vb
  name: CharacterGroupBase
  nameWithType: CharacterGroupBase
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  type: Class
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterGroupBase
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: >-
      [Serializable]

      public abstract class CharacterGroupBase
    content.vb: >-
      <Serializable>

      Public MustInherit Class CharacterGroupBase
  inheritance:
  - System.Object
  derivedClasses:
  - BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
  - BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroup
  - BlazerTech.CharacterManagement.Characters.SingleCharacterGroup
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
  id: GroupName
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: CharacterGroupBase.GroupName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
  type: Property
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GroupName
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public string GroupName { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupName As String
  overload: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName*
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterType
  commentId: F:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterType
  id: CharacterType
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: CharacterType
  nameWithType: CharacterGroupBase.CharacterType
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterType
  type: Field
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterType
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public readonly LayeredCharacterTypeSO CharacterType
    return:
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    content.vb: Public ReadOnly CharacterType As LayeredCharacterTypeSO
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.OnCharacterChanged
  commentId: E:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.OnCharacterChanged
  id: OnCharacterChanged
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: OnCharacterChanged
  nameWithType: CharacterGroupBase.OnCharacterChanged
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.OnCharacterChanged
  type: Event
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: OnCharacterChanged
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public event EventHandler<LayeredCharacter> OnCharacterChanged
    return:
      type: System.EventHandler{BlazerTech.CharacterManagement.Characters.LayeredCharacter}
    content.vb: Public Event OnCharacterChanged As EventHandler(Of LayeredCharacter)
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.#ctor(System.String,BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.#ctor(System.String,BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  id: '#ctor(System.String,BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)'
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: CharacterGroupBase(string, LayeredCharacterTypeSO)
  nameWithType: CharacterGroupBase.CharacterGroupBase(string, LayeredCharacterTypeSO)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterGroupBase(string, BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  type: Constructor
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: .ctor
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: protected CharacterGroupBase(string groupName, LayeredCharacterTypeSO type)
    parameters:
    - id: groupName
      type: System.String
    - id: type
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    content.vb: Protected Sub New(groupName As String, type As LayeredCharacterTypeSO)
  overload: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.#ctor*
  nameWithType.vb: CharacterGroupBase.New(String, LayeredCharacterTypeSO)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.New(String, BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  name.vb: New(String, LayeredCharacterTypeSO)
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.RaiseOnCharacterChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.RaiseOnCharacterChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  id: RaiseOnCharacterChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: RaiseOnCharacterChanged(LayeredCharacter)
  nameWithType: CharacterGroupBase.RaiseOnCharacterChanged(LayeredCharacter)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.RaiseOnCharacterChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: RaiseOnCharacterChanged
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: protected void RaiseOnCharacterChanged(LayeredCharacter character)
    parameters:
    - id: character
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    content.vb: Protected Sub RaiseOnCharacterChanged(character As LayeredCharacter)
  overload: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.RaiseOnCharacterChanged*
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  id: AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: AddCharacter(LayeredCharacter)
  nameWithType: CharacterGroupBase.AddCharacter(LayeredCharacter)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: AddCharacter
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public abstract bool AddCharacter(LayeredCharacter character)
    parameters:
    - id: character
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function AddCharacter(character As LayeredCharacter) As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter*
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  id: ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: ContainsCharacter(LayeredCharacter)
  nameWithType: CharacterGroupBase.ContainsCharacter(LayeredCharacter)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ContainsCharacter
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public abstract bool ContainsCharacter(LayeredCharacter character)
    parameters:
    - id: character
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function ContainsCharacter(character As LayeredCharacter) As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter*
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
  id: ContainsCharacterWithGUID(System.Guid)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: ContainsCharacterWithGUID(Guid)
  nameWithType: CharacterGroupBase.ContainsCharacterWithGUID(Guid)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ContainsCharacterWithGUID
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public abstract bool ContainsCharacterWithGUID(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function ContainsCharacterWithGUID(guid As Guid) As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID*
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(System.String)
  id: ContainsCharacterWithName(System.String)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  langs:
  - csharp
  - vb
  name: ContainsCharacterWithName(string)
  nameWithType: CharacterGroupBase.ContainsCharacterWithName(string)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(string)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ContainsCharacterWithName
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public abstract bool ContainsCharacterWithName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function ContainsCharacterWithName(name As String) As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName*
  nameWithType.vb: CharacterGroupBase.ContainsCharacterWithName(String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(String)
  name.vb: ContainsCharacterWithName(String)
references:
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_GroupName
  name: GroupName
  nameWithType: CharacterGroupBase.GroupName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  name: LayeredCharacterTypeSO
  nameWithType: LayeredCharacterTypeSO
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
- uid: System.EventHandler{BlazerTech.CharacterManagement.Characters.LayeredCharacter}
  commentId: T:System.EventHandler{BlazerTech.CharacterManagement.Characters.LayeredCharacter}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<LayeredCharacter>
  nameWithType: EventHandler<LayeredCharacter>
  fullName: System.EventHandler<BlazerTech.CharacterManagement.Characters.LayeredCharacter>
  nameWithType.vb: EventHandler(Of LayeredCharacter)
  fullName.vb: System.EventHandler(Of BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  name.vb: EventHandler(Of LayeredCharacter)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    name: LayeredCharacter
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    name: LayeredCharacter
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.#ctor*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.#ctor
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase__ctor_System_String_BlazerTech_CharacterManagement_Characters_LayeredCharacterTypeSO_
  name: CharacterGroupBase
  nameWithType: CharacterGroupBase.CharacterGroupBase
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterGroupBase
  nameWithType.vb: CharacterGroupBase.New
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.New
  name.vb: New
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.RaiseOnCharacterChanged*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.RaiseOnCharacterChanged
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_RaiseOnCharacterChanged_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  name: RaiseOnCharacterChanged
  nameWithType: CharacterGroupBase.RaiseOnCharacterChanged
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.RaiseOnCharacterChanged
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacter
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  name: LayeredCharacter
  nameWithType: LayeredCharacter
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacter
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_AddCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  name: AddCharacter
  nameWithType: CharacterGroupBase.AddCharacter
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  name: ContainsCharacter
  nameWithType: CharacterGroupBase.ContainsCharacter
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacterWithGUID_System_Guid_
  name: ContainsCharacterWithGUID
  nameWithType: CharacterGroupBase.ContainsCharacterWithGUID
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacterWithName_System_String_
  name: ContainsCharacterWithName
  nameWithType: CharacterGroupBase.ContainsCharacterWithName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName
