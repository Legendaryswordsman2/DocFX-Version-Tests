### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  id: CharacterLayerSO
  parent: BlazerTech.CharacterManagement.Characters
  children:
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync(System.Action{System.Single})
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AttachedCharacterType
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.CharacterPieces
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex(System.Int32)
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey(System.String)
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName(System.String)
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieces_EditMode
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IncludeNoneOption
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsInitialized
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsValid
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.LayerName
  - BlazerTech.CharacterManagement.Characters.CharacterLayerSO.ReleaseAllCharacterPieces
  langs:
  - csharp
  - vb
  name: CharacterLayerSO
  nameWithType: CharacterLayerSO
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  type: Class
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterLayerSO
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: >-
      [CreateAssetMenu(menuName = "BlazerTech Character Management System/Character Layer", fileName = "New Character Layer")]

      public class CharacterLayerSO : ScriptableObject, IValidatable
    content.vb: >-
      <CreateAssetMenu(menuName:="BlazerTech Character Management System/Character Layer", fileName:="New Character Layer")>

      Public Class CharacterLayerSO Inherits ScriptableObject Implements IValidatable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  implements:
  - BlazerTech.CharacterManagement.Essentials.IValidatable
  attributes:
  - type: UnityEngine.CreateAssetMenuAttribute
    ctor: UnityEngine.CreateAssetMenuAttribute.#ctor
    arguments: []
    namedArguments:
    - name: menuName
      type: System.String
      value: BlazerTech Character Management System/Character Layer
    - name: fileName
      type: System.String
      value: New Character Layer
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AttachedCharacterType
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AttachedCharacterType
  id: AttachedCharacterType
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: AttachedCharacterType
  nameWithType: CharacterLayerSO.AttachedCharacterType
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AttachedCharacterType
  type: Property
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: AttachedCharacterType
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public LayeredCharacterTypeSO AttachedCharacterType { get; }
    parameters: []
    return:
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    content.vb: Public Property AttachedCharacterType As LayeredCharacterTypeSO
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AttachedCharacterType*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.LayerName
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.LayerName
  id: LayerName
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: LayerName
  nameWithType: CharacterLayerSO.LayerName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.LayerName
  type: Property
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: LayerName
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public string LayerName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LayerName As String
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.LayerName*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IncludeNoneOption
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IncludeNoneOption
  id: IncludeNoneOption
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: IncludeNoneOption
  nameWithType: CharacterLayerSO.IncludeNoneOption
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IncludeNoneOption
  type: Property
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IncludeNoneOption
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public bool IncludeNoneOption { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeNoneOption As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IncludeNoneOption*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.CharacterPieces
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.CharacterPieces
  id: CharacterPieces
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: CharacterPieces
  nameWithType: CharacterLayerSO.CharacterPieces
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.CharacterPieces
  type: Property
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterPieces
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public List<CharacterPieceDefinition> CharacterPieces { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition}
    content.vb: Public Property CharacterPieces As List(Of CharacterPieceDefinition)
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.CharacterPieces*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  id: Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: Initialize(LayeredCharacterTypeSO)
  nameWithType: CharacterLayerSO.Initialize(LayeredCharacterTypeSO)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: Initialize
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 50
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public bool Initialize(LayeredCharacterTypeSO characterType)
    parameters:
    - id: characterType
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    return:
      type: System.Boolean
    content.vb: Public Function Initialize(characterType As LayeredCharacterTypeSO) As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.Initialize*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsValid
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsValid
  id: IsValid
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: CharacterLayerSO.IsValid()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsValid()
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IsValid
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 60
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  example: []
  syntax:
    content: public bool IsValid()
    return:
      type: System.Boolean
    content.vb: Public Function IsValid() As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsValid*
  implements:
  - BlazerTech.CharacterManagement.Essentials.IValidatable.IsValid
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey(System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey(System.String)
  id: GetCharacterPieceInfoFromKey(System.String)
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: GetCharacterPieceInfoFromKey(string)
  nameWithType: CharacterLayerSO.GetCharacterPieceInfoFromKey(string)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey(string)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetCharacterPieceInfoFromKey
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterPieceDefinition GetCharacterPieceInfoFromKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition
    content.vb: Public Function GetCharacterPieceInfoFromKey(key As String) As CharacterPieceDefinition
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey*
  nameWithType.vb: CharacterLayerSO.GetCharacterPieceInfoFromKey(String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey(String)
  name.vb: GetCharacterPieceInfoFromKey(String)
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName(System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName(System.String)
  id: GetCharacterPieceInfoFromSpritesheetName(System.String)
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: GetCharacterPieceInfoFromSpritesheetName(string)
  nameWithType: CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName(string)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName(string)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetCharacterPieceInfoFromSpritesheetName
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterPieceDefinition GetCharacterPieceInfoFromSpritesheetName(string spritesheetName)
    parameters:
    - id: spritesheetName
      type: System.String
    return:
      type: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition
    content.vb: Public Function GetCharacterPieceInfoFromSpritesheetName(spritesheetName As String) As CharacterPieceDefinition
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName*
  nameWithType.vb: CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName(String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName(String)
  name.vb: GetCharacterPieceInfoFromSpritesheetName(String)
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex(System.Int32)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex(System.Int32)
  id: GetCharacterPieceInfoFromIndex(System.Int32)
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: GetCharacterPieceInfoFromIndex(int)
  nameWithType: CharacterLayerSO.GetCharacterPieceInfoFromIndex(int)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex(int)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetCharacterPieceInfoFromIndex
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 74
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterPieceDefinition GetCharacterPieceInfoFromIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition
    content.vb: Public Function GetCharacterPieceInfoFromIndex(index As Integer) As CharacterPieceDefinition
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex*
  nameWithType.vb: CharacterLayerSO.GetCharacterPieceInfoFromIndex(Integer)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex(Integer)
  name.vb: GetCharacterPieceInfoFromIndex(Integer)
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsInitialized
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsInitialized
  id: IsInitialized
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: IsInitialized()
  nameWithType: CharacterLayerSO.IsInitialized()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsInitialized()
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IsInitialized
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 91
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public bool IsInitialized()
    return:
      type: System.Boolean
    content.vb: Public Function IsInitialized() As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsInitialized*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync(System.Action{System.Single})
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync(System.Action{System.Single})
  id: AcquireAllCharacterPiecesAsync(System.Action{System.Single})
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: AcquireAllCharacterPiecesAsync(Action<float>)
  nameWithType: CharacterLayerSO.AcquireAllCharacterPiecesAsync(Action<float>)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync(System.Action<float>)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: AcquireAllCharacterPiecesAsync
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 109
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public Task AcquireAllCharacterPiecesAsync(Action<float> onProgress = null)
    parameters:
    - id: onProgress
      type: System.Action{System.Single}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AcquireAllCharacterPiecesAsync(onProgress As Action(Of Single) = Nothing) As Task
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync*
  nameWithType.vb: CharacterLayerSO.AcquireAllCharacterPiecesAsync(Action(Of Single))
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync(System.Action(Of Single))
  name.vb: AcquireAllCharacterPiecesAsync(Action(Of Single))
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.ReleaseAllCharacterPieces
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.ReleaseAllCharacterPieces
  id: ReleaseAllCharacterPieces
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: ReleaseAllCharacterPieces()
  nameWithType: CharacterLayerSO.ReleaseAllCharacterPieces()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.ReleaseAllCharacterPieces()
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ReleaseAllCharacterPieces
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 137
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public void ReleaseAllCharacterPieces()
    content.vb: Public Sub ReleaseAllCharacterPieces()
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.ReleaseAllCharacterPieces*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieces_EditMode
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieces_EditMode
  id: GetCharacterPieces_EditMode
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerSO
  langs:
  - csharp
  - vb
  name: GetCharacterPieces_EditMode()
  nameWithType: CharacterLayerSO.GetCharacterPieces_EditMode()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieces_EditMode()
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetCharacterPieces_EditMode
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Scriptable Objects/CharacterLayerSO.cs
    startLine: 145
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: >-
      [Button("Get Character Pieces", EButtonEnableMode.Always)]

      [EnableIf("IsEditmode")]

      public void GetCharacterPieces_EditMode()
    content.vb: >-
      <Button("Get Character Pieces", EButtonEnableMode.Always)>

      <EnableIf("IsEditmode")>

      Public Sub GetCharacterPieces_EditMode()
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieces_EditMode*
  attributes:
  - type: NaughtyAttributes.ButtonAttribute
    ctor: NaughtyAttributes.ButtonAttribute.#ctor(System.String,NaughtyAttributes.EButtonEnableMode)
    arguments:
    - type: System.String
      value: Get Character Pieces
    - type: NaughtyAttributes.EButtonEnableMode
      value: 0
  - type: NaughtyAttributes.EnableIfAttribute
    ctor: NaughtyAttributes.EnableIfAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: IsEditmode
references:
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: BlazerTech.CharacterManagement.Essentials.IValidatable
  commentId: T:BlazerTech.CharacterManagement.Essentials.IValidatable
  parent: BlazerTech.CharacterManagement.Essentials
  href: BlazerTech.CharacterManagement.Essentials.IValidatable.html
  name: IValidatable
  nameWithType: IValidatable
  fullName: BlazerTech.CharacterManagement.Essentials.IValidatable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: BlazerTech.CharacterManagement.Essentials
  commentId: N:BlazerTech.CharacterManagement.Essentials
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Essentials
  nameWithType: BlazerTech.CharacterManagement.Essentials
  fullName: BlazerTech.CharacterManagement.Essentials
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Essentials
    name: Essentials
    href: BlazerTech.CharacterManagement.Essentials.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Essentials
    name: Essentials
    href: BlazerTech.CharacterManagement.Essentials.html
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AttachedCharacterType*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AttachedCharacterType
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_AttachedCharacterType
  name: AttachedCharacterType
  nameWithType: CharacterLayerSO.AttachedCharacterType
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AttachedCharacterType
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  name: LayeredCharacterTypeSO
  nameWithType: LayeredCharacterTypeSO
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.LayerName*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.LayerName
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_LayerName
  name: LayerName
  nameWithType: CharacterLayerSO.LayerName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.LayerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IncludeNoneOption*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IncludeNoneOption
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_IncludeNoneOption
  name: IncludeNoneOption
  nameWithType: CharacterLayerSO.IncludeNoneOption
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IncludeNoneOption
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.CharacterPieces*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.CharacterPieces
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_CharacterPieces
  name: CharacterPieces
  nameWithType: CharacterLayerSO.CharacterPieces
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.CharacterPieces
- uid: System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition}
  commentId: T:System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CharacterPieceDefinition>
  nameWithType: List<CharacterPieceDefinition>
  fullName: System.Collections.Generic.List<BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition>
  nameWithType.vb: List(Of CharacterPieceDefinition)
  fullName.vb: System.Collections.Generic.List(Of BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition)
  name.vb: List(Of CharacterPieceDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition
    name: CharacterPieceDefinition
    href: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition
    name: CharacterPieceDefinition
    href: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.Initialize*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.Initialize
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_Initialize_BlazerTech_CharacterManagement_Characters_LayeredCharacterTypeSO_
  name: Initialize
  nameWithType: CharacterLayerSO.Initialize
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.Initialize
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsValid*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsValid
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_IsValid
  name: IsValid
  nameWithType: CharacterLayerSO.IsValid
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsValid
- uid: BlazerTech.CharacterManagement.Essentials.IValidatable.IsValid
  commentId: M:BlazerTech.CharacterManagement.Essentials.IValidatable.IsValid
  parent: BlazerTech.CharacterManagement.Essentials.IValidatable
  href: BlazerTech.CharacterManagement.Essentials.IValidatable.html#BlazerTech_CharacterManagement_Essentials_IValidatable_IsValid
  name: IsValid()
  nameWithType: IValidatable.IsValid()
  fullName: BlazerTech.CharacterManagement.Essentials.IValidatable.IsValid()
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Essentials.IValidatable.IsValid
    name: IsValid
    href: BlazerTech.CharacterManagement.Essentials.IValidatable.html#BlazerTech_CharacterManagement_Essentials_IValidatable_IsValid
  - name: (
  - name: )
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Essentials.IValidatable.IsValid
    name: IsValid
    href: BlazerTech.CharacterManagement.Essentials.IValidatable.html#BlazerTech_CharacterManagement_Essentials_IValidatable_IsValid
  - name: (
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_GetCharacterPieceInfoFromKey_System_String_
  name: GetCharacterPieceInfoFromKey
  nameWithType: CharacterLayerSO.GetCharacterPieceInfoFromKey
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromKey
- uid: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition.html
  name: CharacterPieceDefinition
  nameWithType: CharacterPieceDefinition
  fullName: BlazerTech.CharacterManagement.Characters.CharacterPieceDefinition
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_GetCharacterPieceInfoFromSpritesheetName_System_String_
  name: GetCharacterPieceInfoFromSpritesheetName
  nameWithType: CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromSpritesheetName
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_GetCharacterPieceInfoFromIndex_System_Int32_
  name: GetCharacterPieceInfoFromIndex
  nameWithType: CharacterLayerSO.GetCharacterPieceInfoFromIndex
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieceInfoFromIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsInitialized*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsInitialized
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_IsInitialized
  name: IsInitialized
  nameWithType: CharacterLayerSO.IsInitialized
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.IsInitialized
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_AcquireAllCharacterPiecesAsync_System_Action_System_Single__
  name: AcquireAllCharacterPiecesAsync
  nameWithType: CharacterLayerSO.AcquireAllCharacterPiecesAsync
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.AcquireAllCharacterPiecesAsync
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<float>
  nameWithType: Action<float>
  fullName: System.Action<float>
  nameWithType.vb: Action(Of Single)
  fullName.vb: System.Action(Of Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.ReleaseAllCharacterPieces*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.ReleaseAllCharacterPieces
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_ReleaseAllCharacterPieces
  name: ReleaseAllCharacterPieces
  nameWithType: CharacterLayerSO.ReleaseAllCharacterPieces
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.ReleaseAllCharacterPieces
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieces_EditMode*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieces_EditMode
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerSO_GetCharacterPieces_EditMode
  name: GetCharacterPieces_EditMode
  nameWithType: CharacterLayerSO.GetCharacterPieces_EditMode
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerSO.GetCharacterPieces_EditMode
